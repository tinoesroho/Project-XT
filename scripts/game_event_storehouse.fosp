

class Entire
{
	int Number;
	uint16 HexX;
	uint16 HexY;
}

Entire@GetEntire(Map&map,int entireNum,int skip)
{
	Entire ent;
	if(map.GetEntireCoords(entireNum,skip,ent.HexX,ent.HexY)==false)
	return null;
	ent.Number=entireNum;
	return ent;
}

uint ParseEntires(Map&map,Entire[]&entires,int number)
{
	uint oldCount=entires.length();
	uint count=map.CountEntire(number);
	entires.resize(oldCount+count);
	
	for(uint i=0;i<count;i++)
	{
		Entire@ent=entires[oldCount+i];
		if(map.GetEntireCoords(number,i,ent.HexX,ent.HexY)==false)
		return 0;
		ent.Number=number;
	}
	
	return count;
}

bool GetEntireFreeHex(Map&map,int number,uint16&hx,uint16&hy)
{
	uint count=map.CountEntire(number); 
	
	for(uint i=0;i<count;i++)
	{
		if(map.GetEntireCoords(number,i,hx,hy)&&map.IsHexPassed(hx,hy))
		return true;
	}
	
	if(hx==0||hy==0||hx>=map.GetWidth()-1||hy>=map.GetHeight()-1)
	return false; 
	
	for(uint i=0;i<count;i++)
	{
		if(map.GetEntireCoords(number,i,hx,hy))
		{
			for(int x=-1;x<=1;x++)
			{
				for(int y=-1;y<=1;y++)
				{
					if(x==0&&y==0)
					continue;
					
					if(__MapHexagonal)
					{
						if((hx%2)==1&&((x==-1&&y==1)||(x==1&&y==1)))
						continue;
						if((hx%2)==0&&((x==-1&&y==-1)||(x==1&&y==-1)))
						continue;
					}
					
					if(map.IsHexPassed(hx+x,hy+y))
					{
						hx+=x;
						hy+=y;
						return true;
					}
				}
			}
		}
	}
	return false;
}

bool GetNearEntire(Map&map,int number,uint16&hx,uint16&hy)
{
	uint16 hxBase=hx;
	uint16 hyBase=hy;
	
	Entire[]entires;
	uint count=ParseEntires(map,entires,number);
	if(count==0)
	return false;
	
	hx=entires[0].HexX;
	hy=entires[0].HexY;
	for(uint i=1;i<count;i++)
	{
		Entire@ent=entires[i];
		if(GetDistantion(hxBase,hyBase,ent.HexX,ent.HexY)<GetDistantion(hxBase,hyBase,hx,hy))
		{
			hx=ent.HexX;
			hy=ent.HexY;
		}
	}
	
	return true;
}                  

bool IsCritterInDeadZone(Critter&cr,Map&map,uint8 dir,uint8 hexFirst,uint8 hexEnd)
{
	uint crossNum=0;
	for(uint i=hexFirst;i<=hexEnd;i++)
	{
		if(BeamCrossing2Section(map,i,(i==hexEnd?hexFirst:i+1),cr.HexX,cr.HexY,dir))
		{
			crossNum++;
			
		}
	}
	bool inZone=false;
	if(crossNum>0&&(crossNum%2==1))
	inZone=true;
	
	return inZone;
	
}         

bool BeamCrossing2Section(Map&map,uint8 hexNum1,uint8 hexNum2,uint16 beamX,uint16 beamY,uint8 dir)
{
	
	uint16 hx0=beamX;
	uint16 beamX2=hx0;
	uint16 hy0=beamY;
	uint16 beamY2=hy0;
	uint steps=0;
	
	while(hx0!=beamX2||hy0!=beamY2||steps==0)
	{
		steps+=1;
		hx0=beamX2;
		hy0=beamY2;
		map.MoveHexByDir(beamX2,beamY2,dir,steps);
	} 
	
	uint16 hx1=0;
	uint16 hx2=0;
	uint16 hy1=0;
	uint16 hy2=0;
	
	if(!map.GetEntireCoords(hexNum1,0,hx1,hy1))
	return false;
	if(!map.GetEntireCoords(hexNum2,0,hx2,hy2))
	return false;                           
	
	float z=(int(hx1)-int(hx2))*(int(beamY2)-int(beamY))-(int(hy1)-int(hy2))*(int(beamX2)-int(beamX));
	
	float ch=(int(hx1)-int(beamX))*(int(beamY2)-int(beamY))-(int(hy1)-int(beamY))*(int(beamX2)-int(beamX));
	
	float cbeam=(int(hx1)-int(hx2))*(int(hy1)-int(beamY))-(int(hy1)-int(hy2))*(int(hx1)-int(beamX));
	
	if(z==0&&ch==0&&cbeam==0)
	return false;
	
	if(z==0)
	return false;
	
	float crossS=ch/z;
	
	float crossB=cbeam/z;
	return(0<crossS&&crossS<1&&0<crossB&&crossB<1);
}                                                                                                                                                                                                                                                                                                                                                                                                  

const uint16[][]GlobalCoords=
{
	{668,1121},
	{375,709},
	{274,367},
	{685,218},
	{1224,632},
	{1073,1181},
	{1019,119}
}; 

uint e_CreateStoreHouse(uint[]@values)
{
	
	uint idx=Random(0,GlobalCoords.length()-1);
	
	Location@[]locations;
	if(GetLocations(GlobalCoords[idx][0],GlobalCoords[idx][1],(6*__GlobalMapZoneLength),locations)>0)
	{
		for(uint i=0,l=locations.length();i<l;i++)
		{
			Location@loc=locations[i];
			if((@loc!=null))
			{
				GameVar@isStoreHouse=GetLocalVar((16),loc.Id);
				if((@isStoreHouse!=null)&&isStoreHouse>0)
				return 0;
			}
		}
	}
	
	uint locId=CreateLocation((112),
	GlobalCoords[idx][0]+Random(-1*(int(3*__GlobalMapZoneLength)),(int(3*__GlobalMapZoneLength))),
	GlobalCoords[idx][1]+Random(-1*(int(3*__GlobalMapZoneLength)),(int(3*__GlobalMapZoneLength))),
	null);
	uint pid=0;
	uint8 dir=0;
	if(locId>0)
	{
		Location@loc=GetLocation(locId);
		if((@loc!=null))
		{
			loc.AutoGarbage=false;
			loc.Visible=false;
			Map@map=loc.GetMapByIndex(0);
			if((@map!=null))
			{
				map.SetScript("_MapInit");
				Item@[]items;
				map.GetItems(128,items);
				if(items.length()>0)
				{
					GameVar@contId=GetLocalVar((16),locId);
					if((@contId!=null))
					{
						contId=items[0].Id;
						loc.Visible=false;
						loc.AutoGarbage=false;
						Entire[]entires;
						uint16 hexX=0,hexY=0;
						GetNearEntire(map,(178),hexX,hexY);
						if(ParseEntires(map,entires,(177))>0)
						{
							for(uint i=0,l=entires.length();i<l;i++)
							{
								dir=GetDirection(entires[i].HexX,entires[i].HexY,hexX,hexY);
								pid=Random(0,1)==0?(526):(527);
								int[]params={(106),(8),(89),17,(107),(pid==(526)?(270):(276)),(84),-1};
								map.AddNpc(pid,entires[i].HexX,entires[i].HexY,dir,params,null,"encounter_npc@_NpcInit");
							}
						}
					}
				}
			}
		}
	}
	return 0;
}

void _MapInit(Map&map,bool firstTime)
{
	map.SetEvent((6),"_MapInCritter");
}

void _MapInCritter(Map&map,Critter&cr)
{
	if(cr.IsPlayer())
	{
		Critter@[]npc;
		if(map.GetCritters(0,(0x01)|(0x20),npc)>0)
		{
			for(uint i=0,l=npc.length();i<l;i++)
			{
				Critter@hostile=npc[i];
				if((@hostile!=null)&&hostile.Stat[(89)]==17)
				hostile.AddEnemyInStack(cr.Id);
			}
		}
	}
}

void SaveLoot2Storehouse(uint16 WorldX,uint16 WorldY,Item@[]items)
{
	
	Location@[]locations;
	Location@storeHouse;
	GameVar@isStoreHouse;
	if(GetLocations(WorldX,WorldY,(6*__GlobalMapZoneLength),locations)>0)
	{
		for(uint i=0,l=locations.length();i<l;i++)
		{
			Location@loc=locations[i];
			if((@loc!=null))
			{
				@storeHouse=loc;
				@isStoreHouse=GetLocalVar((16),loc.Id);
				if((@isStoreHouse!=null)&&isStoreHouse>0)
				break;
			}
		}
	}
	if((@storeHouse!=null)&&storeHouse.Visible==false&&(@isStoreHouse!=null)&&isStoreHouse>0)
	{
		Item@container=GetItem(isStoreHouse.GetValue());
		if((@container!=null))
		{
			MoveItems(items,container,0);
			if(CountContainerItems(container)>(200))
			{
				storeHouse.Visible=true;
				CreateTimeEvent(__FullSecond+((4)*__TimeMultiplier*86400),"e_DeleteLocation",storeHouse.Id,true);
			}
			return;
		}
		
	}
}

uint CountContainerItems(Item&container)
{
	Item@item;
	Item@[]items;
	uint count=0;
	container.GetItems(0,items);
	for(uint i=0,l=items.length();i<l;i++)
	{
		@item=items[i];
		if((@item!=null))
		{
			if(item.GetType()==(3)||
			item.GetType()==(1)||
			item.GetType()==(2))
			count+=item.GetCount();
			else
			count+=1;
		}
	}
	return count;
} 

uint e_DeleteLocation(uint[]@values)
{
	Location@loc=GetLocation(values[0]);
	if((@loc!=null))
	DeleteLocation(loc.Id);
	return 0;
}
