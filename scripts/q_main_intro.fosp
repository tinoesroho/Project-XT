

class Entire
{
	int Number;
	uint16 HexX;
	uint16 HexY;
}

Entire@GetEntire(Map&map,int entireNum,int skip)
{
	Entire ent;
	if(map.GetEntireCoords(entireNum,skip,ent.HexX,ent.HexY)==false)
	return null;
	ent.Number=entireNum;
	return ent;
}

uint ParseEntires(Map&map,Entire[]&entires,int number)
{
	uint oldCount=entires.length();
	uint count=map.CountEntire(number);
	entires.resize(oldCount+count);
	
	for(uint i=0;i<count;i++)
	{
		Entire@ent=entires[oldCount+i];
		if(map.GetEntireCoords(number,i,ent.HexX,ent.HexY)==false)
		return 0;
		ent.Number=number;
	}
	
	return count;
}

bool GetEntireFreeHex(Map&map,int number,uint16&hx,uint16&hy)
{
	uint count=map.CountEntire(number); 
	
	for(uint i=0;i<count;i++)
	{
		if(map.GetEntireCoords(number,i,hx,hy)&&map.IsHexPassed(hx,hy))
		return true;
	}
	
	if(hx==0||hy==0||hx>=map.GetWidth()-1||hy>=map.GetHeight()-1)
	return false; 
	
	for(uint i=0;i<count;i++)
	{
		if(map.GetEntireCoords(number,i,hx,hy))
		{
			for(int x=-1;x<=1;x++)
			{
				for(int y=-1;y<=1;y++)
				{
					if(x==0&&y==0)
					continue;
					
					if(__MapHexagonal)
					{
						if((hx%2)==1&&((x==-1&&y==1)||(x==1&&y==1)))
						continue;
						if((hx%2)==0&&((x==-1&&y==-1)||(x==1&&y==-1)))
						continue;
					}
					
					if(map.IsHexPassed(hx+x,hy+y))
					{
						hx+=x;
						hy+=y;
						return true;
					}
				}
			}
		}
	}
	return false;
}

bool GetNearEntire(Map&map,int number,uint16&hx,uint16&hy)
{
	uint16 hxBase=hx;
	uint16 hyBase=hy;
	
	Entire[]entires;
	uint count=ParseEntires(map,entires,number);
	if(count==0)
	return false;
	
	hx=entires[0].HexX;
	hy=entires[0].HexY;
	for(uint i=1;i<count;i++)
	{
		Entire@ent=entires[i];
		if(GetDistantion(hxBase,hyBase,ent.HexX,ent.HexY)<GetDistantion(hxBase,hyBase,hx,hy))
		{
			hx=ent.HexX;
			hy=ent.HexY;
		}
	}
	
	return true;
}                  

bool IsCritterInDeadZone(Critter&cr,Map&map,uint8 dir,uint8 hexFirst,uint8 hexEnd)
{
	uint crossNum=0;
	for(uint i=hexFirst;i<=hexEnd;i++)
	{
		if(BeamCrossing2Section(map,i,(i==hexEnd?hexFirst:i+1),cr.HexX,cr.HexY,dir))
		{
			crossNum++;
			
		}
	}
	bool inZone=false;
	if(crossNum>0&&(crossNum%2==1))
	inZone=true;
	
	return inZone;
	
}         

bool BeamCrossing2Section(Map&map,uint8 hexNum1,uint8 hexNum2,uint16 beamX,uint16 beamY,uint8 dir)
{
	
	uint16 hx0=beamX;
	uint16 beamX2=hx0;
	uint16 hy0=beamY;
	uint16 beamY2=hy0;
	uint steps=0;
	
	while(hx0!=beamX2||hy0!=beamY2||steps==0)
	{
		steps+=1;
		hx0=beamX2;
		hy0=beamY2;
		map.MoveHexByDir(beamX2,beamY2,dir,steps);
	} 
	
	uint16 hx1=0;
	uint16 hx2=0;
	uint16 hy1=0;
	uint16 hy2=0;
	
	if(!map.GetEntireCoords(hexNum1,0,hx1,hy1))
	return false;
	if(!map.GetEntireCoords(hexNum2,0,hx2,hy2))
	return false;                           
	
	float z=(int(hx1)-int(hx2))*(int(beamY2)-int(beamY))-(int(hy1)-int(hy2))*(int(beamX2)-int(beamX));
	
	float ch=(int(hx1)-int(beamX))*(int(beamY2)-int(beamY))-(int(hy1)-int(beamY))*(int(beamX2)-int(beamX));
	
	float cbeam=(int(hx1)-int(hx2))*(int(hy1)-int(beamY))-(int(hy1)-int(hy2))*(int(hx1)-int(beamX));
	
	if(z==0&&ch==0&&cbeam==0)
	return false;
	
	if(z==0)
	return false;
	
	float crossS=ch/z;
	
	float crossB=cbeam/z;
	return(0<crossS&&crossS<1&&0<crossB&&crossB<1);
}                  

import void ReplicateCritter(Critter&cr)from"replication";
import void FlushScreen(Critter&cr,uint fromColor,uint toColor,uint timeMs)from"effects"; 

bool SetMainQuest(uint playerId,int value)
{
	GameVar@qVar=GetLocalVar((5001),playerId);
	if(!(@qVar!=null))
	return false;
	
	qVar=value;
	return true;
} 

bool CheckPlayerCompleteStart(Critter&player)
{
	GameVar@storyLine=GetLocalVar((5001),player.Id);
	if(!(@storyLine!=null))
	{
		Log("Main quest not FOUND!");
		return true;
	}
	return(storyLine.GetValue()>=(1));
	
} 

bool CheckPlayerCompleteIntro(Critter&player)
{
	GameVar@storyLine=GetLocalVar((5001),player.Id);
	if(!(@storyLine!=null))
	{
		Log("Main quest not FOUND!");
		return true;
	}
	return(storyLine.GetValue()>=(2));
	
}  

bool SetPlayerStartLocation(Critter&player)
{
	
	uint locId=CreateLocation((260),(5),(5),null);
	if(locId==0)
	return false;
	Location@loc=GetLocation(locId);
	if(!(@loc!=null))
	return false;
	Map@map=loc.GetMapByIndex(0);
	if(!(@map!=null))
	return false;
	if(!player.TransitToMap(map.Id,(Random(0,1)==0?(0):(240))))
	return false;  
	
	int crType=(player.Stat[(71)]==(0)?(13):(6));
	if(player.Stat[(4)]<=(3))
	crType=(player.Stat[(71)]==(0)?(64):(63));
	player.ChangeCrType(crType);
	player.StatBase[(112)]=crType;               
	
	;
	return true;
}  

bool SetPlayerIntroLocation(Critter&player)
{
	uint locId=CreateLocation((261),(5),(5),null);
	if(locId==0)
	return false;
	Location@loc=GetLocation(locId);
	if(!(@loc!=null))
	return false;
	Map@map=loc.GetMapByIndex(0);
	if(!(@map!=null))
	return false;
	player.TransitToMap(map.Id,(0));
	;
	return true;
}   

bool SetPlayerStoryLineLocation(Critter&player)
{
	
	if(CheckPlayerCompleteIntro(player))
	return false;
	if(!CheckPlayerCompleteStart(player))
	{
		
		return SetPlayerStartLocation(player);
	}
	else
	{
		
		return SetPlayerIntroLocation(player);
	}
} 

void r_TransitToIntro(Critter&player,Critter@npc)
{
	SetPlayerIntroLocation(player);
	SetMainQuest(player.Id,(1));
} 

void t_KillPlayerOnIntro(Critter&player,Scenery&trigger,bool entered,uint8 dir)
{
	player.Wait(3000);
	FlushScreen(player,((uint((0xFF<<24)|(((0)&0xFF)<<16)|(((0)&0xFF)<<8)|((0)&0xFF)))),((uint((0xFF<<24)|(((0)&0xFF)<<16)|(((0)&0xFF)<<8)|((0)&0xFF)))),5000);
	
	CreateTimeEvent(__FullSecond+((750)*__TimeMultiplier/1000),"e_KillPlayer",player.Id,true);
	CreateTimeEvent(__FullSecond+((1000)*__TimeMultiplier/1000),"e_OnPlayerDead",player.Id,true);
	CreateTimeEvent(__FullSecond+((5)*__TimeMultiplier),"e_ReplicateCritter",player.Id,true);
	SetMainQuest(player.Id,(2));
}

import void door_open(Critter&player,Scenery&trigger,bool entered,uint8 dir,int entireNum)from"trigger";  

void t_Initiation(Critter&player,Scenery&trigger,bool entered,uint8 dir,int param)
{
	Map@map=player.GetMap();
	if((@map!=null))
	{
		if(entered&&player.IsPlayer())
		{
			GameVar@status=GetLocalVar((5004),map.Id);
			if((@status!=null)&&status==0)
			{
				status=1;
				player.Wait(3000);
				uint[]values={map.Id,player.Id};
				CreateTimeEvent(__FullSecond+((1)*__TimeMultiplier),"e_SmallEffect",values,true);
				CreateTimeEvent(__FullSecond+((5)*__TimeMultiplier),"e_MainEffect",values,true);
				return;
			}
		}
		GameVar@doorsOpened=GetLocalVar((5005),map.Id);
		if((@doorsOpened!=null)&&doorsOpened==0)
		return;
	}
	door_open(player,trigger,entered,dir,param);
}

uint e_SmallEffect(uint[]@values)
{
	uint mapId=values[0];
	uint crId=values[1];
	if(mapId>0&&crId>0)
	{
		Map@map=GetMap(mapId);
		Critter@cr=GetCritter(crId);
		if((@cr!=null))
		{
			Map@mapCr=cr.GetMap();
			if((@map!=null)&&(@mapCr!=null)&&(mapCr.Id==map.Id))
			{
				GameVar@doorsOpened=GetLocalVar((5005),map.Id);
				if((@doorsOpened!=null)&&doorsOpened==0)
				{
					Entire[]entires;
					if(ParseEntires(map,entires,(323))>0)
					{
						for(uint i=0,l=entires.length();i<l;i++)
						{
							map.RunEffect((4008),entires[i].HexX,entires[i].HexY,Random(1,2));
						}
					}
					return((1)*__TimeMultiplier);
				}
			}
		}
	}
	return 0;
}

uint e_MainEffect(uint[]@values)
{
	uint mapId=values[0];
	uint crId=values[1];
	if(mapId>0&&crId>0)
	{
		Map@map=GetMap(mapId);
		Critter@cr=GetCritter(crId);
		if((@cr!=null))
		{
			Map@mapCr=cr.GetMap();
			if((@map!=null)&&(@mapCr!=null)&&(mapCr.Id==map.Id))
			{
				GameVar@doorsOpened=GetLocalVar((5005),map.Id);
				if((@doorsOpened!=null)&&doorsOpened==0)
				{
					map.RunEffect((4008),cr.HexX,cr.HexY,3);
					doorsOpened=1;
					cr.SayMsg((11),(0),20);
				}
			}
		}
	}
	return 0;
}

uint e_KillPlayer(uint[]@values)
{
	Critter@player=GetCritter(values[0]);
	if(!(@player!=null))
	return 0;
	player.PlaySound("WA@2XXX1.acm",true);
	return 0;
}

uint e_OnPlayerDead(uint[]@values)
{
	Critter@player=GetCritter(values[0]);
	if(!(@player!=null))
	return 0;
	player.PlaySound((player.Stat[(71)]==(0)?"HFXXXBF.acm":"HMXXXBF.acm"),true);
	player.ToDead(0,null);
	return 0;
}

uint e_ReplicateCritter(uint[]@values)
{
	Critter@player=GetCritter(values[0]);
	if(!(@player!=null))
	return 0; 
	
	int crType=(player.Stat[(71)]==(0)?((11)):((4)));
	player.ChangeCrType(crType);
	player.StatBase[(112)]=0;      
	
	player.AddHolodiskInfo((43));
	CreateTimeEvent(__FullSecond+((3)*__TimeMultiplier),"e_ShowMessage",player.Id,true);
	ReplicateCritter(player);
	return 0;
}

uint e_ShowMessage(uint[]@values)
{
	Critter@player=GetCritter(values[0]);
	player.StatBase[(83)]=0;
	player.StatBase[(82)]=0;
	player.ShowScreen((2),0,"answer_None");
	player.SayMsg((18),(0),(6000));
	player.SayMsg((11),(0),(6000));
	return 0;
}

void answer_None(Critter&player,uint answerI,string&answerS)
{}
