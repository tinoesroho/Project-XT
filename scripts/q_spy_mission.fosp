

import bool AddAttackPlane(Critter&npc,uint priority,Critter&target)from"npc_planes";        

bool BeginSpyControl(Critter&catcher,uint catchRadius,uint minSneak,uint checkTime,uint varStatNum,uint varQuest,uint strAlarm)
{
	uint[]values={catchRadius,minSneak,checkTime,catcher.Id,varStatNum,varQuest,strAlarm};
	SpyControl@sc=GetSpyConFromArgs(values);
	;
	Critter@[]critters;
	
	if(!(@sc!=null))
	{
		;
		return false;
	}
	
	Map@map=catcher.GetMap();
	if(!(@map!=null))
	return false;
	;
	
	if(map.GetCrittersHex(catcher.HexX,catcher.HexY,sc.SpyCatchRadius,(0x03)|(0x10),critters)>0)
	{
		;
		for(uint i=0;i<critters.length();i++)
		{
			;
			sc.sneakerIds.insertLast(critters[i].Id);
			;
			GameVar@qVar=GetLocalVar(sc.QuestVar,critters[i].Id);
			if((@qVar!=null))
			{
				;
				if(qVar.GetMax()>=(17)&&qVar.GetValue()!=(17)&&qVar.GetValue()>0&&qVar.GetValue()<=(20))
				{
					;
					qVar=(17);
				}
			}
		}
	}
	;
	return(sc.CreateCatchCheckTimeEvent()>0);
}

uint e_DefaultHandler(uint[]@values)
{
	;
	SpyControl@sc=GetSpyConFromArgs(values);
	
	if(!(@sc!=null))
	{
		Log("Spy Control Failed. ");
		return 0;
	} 
	
	GameVar@sV=GetLocalVar(sc.CatchStatusVar,sc.CatcherId);
	if((@sV!=null))
	{
		if(sV.GetValue()==0)
		{
			
			sc.CompleteQuest();
			return 0;
		}
		
		Critter@npc=sc.Catcher();
		if(!(@npc!=null))
		return 0;
		if(!npc.IsLife())
		{
			sc.QuestFailedCatchedPlayer();
			return 0;
		}
	}
	
	uint nextCatch=sc.CreateCatchCheckTimeEvent();
	if(nextCatch==0)
	{
		Log("Spy Control Time Event create Failed. ");
		return 0;
		
	}
	;
	sc.QuestFailedLeftPlayers();
	
	if(sc.TryCatchSpy())
	{
		;
		sc.QuestFailedCatchedPlayer();
		sc.BeginAttack();
		sV=0;
		return 0;
	}
	
	return 0;
}

void _CancelSpyControl(Critter&cr)
{}

SpyControl@GetSpyConFromArgs(uint[]values)
{
	SpyControl@sc=SpyControl();
	
	sc.SpyCatchRadius=values.length()>0?values[0]:0;
	sc.MinSneakToHide=values.length()>1?values[1]:0;
	sc.SpyCheckTime=values.length()>2?values[2]:0;
	sc.CatcherId=values.length()>3?values[3]:0;
	sc.CatchStatusVar=values.length()>4?values[4]:0;
	sc.QuestVar=values.length()>5?values[5]:0;
	sc.DialStrAlarm=values.length()>6?values[6]:0;
	
	if(values.length()>7)
	{
		for(uint i=7;i<values.length();i++)
		{
			sc.sneakerIds.insertLast(values[i]);
		}
	}
	
	return sc;
}  

class SpyControl
{
	SpyControl()
	{}
	
	uint SpyCatchRadius;
	int MinSneakToHide;
	uint SpyCheckTime;
	
	uint CatcherId;
	uint CatchStatusVar;
	uint[]sneakerIds;
	uint DialStrAlarm;
	
	uint QuestVar;
	
	Critter@Catcher()
	{
		Critter@cr=GetCritter(CatcherId);
		if(!(@cr!=null))
		return null;
		
		return cr;
	}
	
	uint CreateCatchCheckTimeEvent()
	{
		uint[]values={this.SpyCatchRadius,this.MinSneakToHide,this.SpyCheckTime,this.CatcherId,this.CatchStatusVar,this.QuestVar,this.DialStrAlarm};
		
		for(uint i=0;i<this.sneakerIds.length();i++)
		{
			values.insertLast(this.sneakerIds[i]);
		}
		return CreateTimeEvent(__FullSecond+this.SpyCheckTime,"q_spy_mission@e_DefaultHandler",values,false);
	}  
	
	bool TryCatchSpy()
	{
		Critter@catcher=this.Catcher();
		if(!(@catcher!=null))
		return false;
		if(catcher.IsDead())
		return false;
		
		Critter@[]critters;
		uint dist=0;
		Map@map=catcher.GetMap();
		if(!(@map!=null))
		return false;
		;
		if(map.GetCrittersHex(catcher.HexX,catcher.HexY,this.SpyCatchRadius,(0x03)|(0x10),critters)==0)
		return false;
		;
		for(uint i=0;i<critters.length();i++)
		{
			dist=GetCrittersDistantion(catcher,critters[i]);
			
			if(dist>this.SpyCatchRadius)
			continue;
			
			if(critters[i].Mode[(510)]==0)
			return true;
			
			if(critters[i].Skill[(208)]<this.MinSneakToHide)
			return true;
		}
		
		return false;
	} 
	
	void QuestFailedLeftPlayers()
	{
		Critter@cr=this.Catcher();
		if(!(@cr!=null))
		return;
		Map@map=cr.GetMap();
		if(!(@map!=null))
		return;
		Critter@[]critters;
		map.GetCrittersHex(cr.HexX,cr.HexY,this.SpyCatchRadius,(0x03)|(0x10),critters);
		bool playerIsHere=true;
		
		for(uint i=0;i<this.sneakerIds.length();i++)
		{
			playerIsHere=false;
			for(uint j=0;j<critters.length();j++)
			{
				if(this.sneakerIds[i]==critters[j].Id)
				{
					j=critters.length();
					playerIsHere=true;
				}
			}
			if(!playerIsHere)
			{
				GameVar@qVar=GetLocalVar(this.QuestVar,this.sneakerIds[i]);
				if((@qVar!=null))
				{
					if(qVar.GetMax()>=(19)&&qVar.GetValue()==(17))
					{
						qVar=(19);
					}
				}
			}
		}
	} 
	
	void QuestFailedCatchedPlayer()
	{
		for(uint i=0;i<this.sneakerIds.length();i++)
		{
			GameVar@qVar=GetLocalVar(this.QuestVar,this.sneakerIds[i]);
			if((@qVar!=null))
			{
				if(qVar.GetMax()>=(18)&&qVar.GetValue()==(17))
				{
					qVar=(18);
				}
			}
		}
	} 
	
	void BeginAttack()
	{
		Critter@cr=this.Catcher();
		if(!(@cr!=null))
		return;
		
		Critter@[]critters;
		Map@map=cr.GetMap();
		if(!(@map!=null))
		return;
		if(map.GetCrittersHex(cr.HexX,cr.HexY,this.SpyCatchRadius,(0x03)|(0x10),critters)==0)
		return;
		
		cr.ErasePlane((0),true);
		
		for(uint i=0;i<critters.length();i++)
		{
			if(critters[i].IsPlayer())
			{
				AddAttackPlane(cr,0,critters[i]);
			}
		}
		
		cr.SayMsg((4),(1),(1000000000+(cr.StatBase[(104)])*100000+(this.DialStrAlarm)));
	} 
	
	void CompleteQuest()
	{
		Critter@cr=this.Catcher();
		if(!(@cr!=null))
		return;
		Map@map=cr.GetMap();
		if(!(@map!=null))
		return;
		Critter@[]critters;
		map.GetCrittersHex(cr.HexX,cr.HexY,this.SpyCatchRadius,(0x03)|(0x10),critters);
		bool playerIsHere=true;
		
		for(uint i=0;i<this.sneakerIds.length();i++)
		{
			playerIsHere=false;
			for(uint j=0;j<critters.length();j++)
			{
				if(this.sneakerIds[i]==critters[j].Id)
				{
					j=critters.length();
					playerIsHere=true;
				}
			}
			if(playerIsHere)
			{
				GameVar@qVar=GetLocalVar(this.QuestVar,this.sneakerIds[i]);
				if((@qVar!=null))
				{
					if(qVar.GetMax()>=(20)&&qVar.GetValue()==(17))
					{
						qVar=(20);
					}
				}
			}
		}
	}
}            

import uint GetNearFullSecond(uint16 year,uint16 month,uint16 day,uint16 hour,uint16 minute,uint16 second)from"time";
import bool AddWalkPlane(Critter&npc,uint priority,int identifier,uint identifierExt,uint16 hexX,uint16 hexY,uint8 dir,bool run,uint cut)from"npc_planes";
import bool AddMiscPlane(Critter&npc,uint priority,uint waitSecond,string@funcName)from"npc_planes";

void _VCityMapInit(Map&map,bool firstTime)
{
	Critter@maclure=map.GetNpc((35),(0x03)|(0x20),0);
	if(!(@maclure!=null))
	return;
	
	if(CreateTimeEvent(GetNearFullSecond(0,0,0,18,0,0),"e_BeginReport",maclure.Id,false)==0)
	{
		Log("Time event begin report for spy mission create fail, "+GetLastError());
	}
} 

uint e_BeginReport(uint[]@values)
{
	Critter@maclure=GetCritter(values[0]);
	if(!(@maclure!=null))
	return 24*60*60;
	
	Map@map=maclure.GetMap();
	if(!(@map!=null))
	return 24*60*60;
	
	Critter@lynett=map.GetNpc((34),(0x03)|(0x20),0);
	if(!(@lynett!=null))
	return 24*60*60;
	
	if(!maclure.IsLife()||!lynett.IsLife())
	return 24*60;
	
	maclure.SetEvent((36),"_PlaneEnd");
	uint hX=lynett.HexX;
	uint hY=lynett.HexY;
	
	AddWalkPlane(maclure,0,(124),0,hX,hY,Random(0,5),false,3);
	
	CreateTimeEvent(GetNearFullSecond(0,0,0,18,0,0),"e_BeginReport",maclure.Id,false);
	return 0;
} 

int _PlaneEnd(Critter&cr,NpcPlane&plane,int reason,Critter@someCr,Item@someItem)
{
	if(plane.Identifier==(124)&&reason==(30))
	{
		Map@map=cr.GetMap();
		if(!(@map!=null))
		return(0);
		Critter@lynett=map.GetNpc((34),(0x03)|(0x20),0);
		if(!(@lynett!=null))
		return(0);
		
		GameVar@sV=GetLocalVar(((4272)),cr.Id);
		if(!(@sV!=null))
		return(0);
		sV=1;
		@sV=GetLocalVar(((4272)),lynett.Id);
		if(!(@sV!=null))
		return(0);
		sV=1;
		
		lynett.SetDir(GetDirection(lynett.HexX,lynett.HexY,cr.HexX,cr.HexY));
		cr.SetDir(GetDirection(cr.HexX,cr.HexY,lynett.HexX,lynett.HexY));
		
		if(BeginSpyControl(cr,10,100,60,((4272)),((4271)),(1))&&BeginSpyControl(lynett,10,100,60,((4272)),((4271)),(1)))
		{
			lynett.StatBase[(91)]=(3180);
			cr.StatBase[(91)]=(3180)+1;
			AddMiscPlane(lynett,0,__FullSecond+2*60,"q_spy_mission@plane_SayNextPhrase");
			AddMiscPlane(cr,0,__FullSecond+4*60,"q_spy_mission@plane_SayNextPhrase");
			
		}
		else
		{
			Log("Begin spy control error");
		}
	}
	
	return(0);
}

void plane_SayNextPhrase(Critter&cr)
{
	if(cr.StatBase[(91)]>(3205))
	{
		EndReport(cr);
		return;
	}
	
	cr.SayMsg((2),(0),uint(cr.StatBase[(91)]));
	
	cr.StatBase[(91)]+=2;
	AddMiscPlane(cr,0,__FullSecond+4*60,"q_spy_mission@plane_SayNextPhrase");
}

void EndReport(Critter&cr)
{
	cr.StatBase[(91)]=0;
	GameVar@sV=GetLocalVar(((4272)),cr.Id);
	if((@sV!=null))
	{
		sV=0;
	}
}
