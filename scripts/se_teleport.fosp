

const uint16[]Pids_AllWeapon={(300),(122),(8),(22),(18),(404),(241),(313),(398),(388),(394),(10),(287),(299),(23),(405),(143),(351),(403),(500),(161),(162),(261),(353),(392),(94),(385),(242),(268),(354),(9),(296),(283),(352),(391),(332),(11),(400),(13),(12),(389),(395),(350),(355),(387),(16),(402),(390),(118),(401),(28),(120),(24),(406),(15),(233),(396),(397),(16),(402),(390),(118),(401),(28),(120),(24),(406),(15),(233),(396),(397),(159),(25),(26),(27),(79),(205),(365),(45),(19),(423),(426),(486),(4),(236),(517),(383),(319),(522),(7),(280),(320),(5),(20),(384),(6),(386),(115),(160),(399),(116),(292),(293),(496),(497),(235),(21),(234),(407)};
const uint16[]Pids_WeaponSmallGuns={(300),(122),(8),(22),(18),(404),(241),(313),(398),(388),(394),(10),(287),(299),(23),(405),(143),(351),(403),(500),(161),(162),(261),(353),(392),(94),(385),(242),(268),(354),(9),(296),(283),(352),(391),(332)};
const uint16[]Pids_WeaponPistols={(300),(122),(8),(22),(18),(404),(241),(313),(398),(388),(394)};
const uint16[]Pids_WeaponRifles={(10),(287),(299),(23),(405),(143),(351),(403),(500),(161),(162),(261),(353),(392)};
const uint16[]Pids_WeaponShotguns={(94),(385),(242),(268),(354)};
const uint16[]Pids_WeaponPistolMachineGun={(9),(296),(283),(352),(391),(332)};
const uint16[]Pids_WeaponBigGuns={(11),(400),(13),(12),(389),(395),(350),(355),(387)};
const uint16[]Pids_WeaponEnergo={(16),(402),(118),(401),(28),(120),(24),(406),(15),(233),(396),(397)};
const uint16[]Pids_WeaponLaser={(16),(402),(118),(401),(28),(120)};
const uint16[]Pids_WeaponPlasma={(24),(406),(15),(233)};
const uint16[]Pids_WeaponPulse={(396),(397)};
const uint16[]Pids_WeaponThrowing={(159),(25),(26),(27),(79),(205),(365),(45),(19),(423),(426),(486)};
const uint16[]Pids_WeaponGrenade={(159),(25),(26),(27)};
const uint16[]Pids_WeaponThrowingOther={(79),(205),(365),(45),(19),(423),(426),(486)};
const uint16[]Pids_WeaponMelee={(4),(236),(517),(383),(319),(522),(7),(280),(320),(5),(20),(384),(6),(386),(115),(160),(399),(116)};
const uint16[]Pids_WeaponCutting={(4),(236),(517),(383),(319),(522)};
const uint16[]Pids_WeaponPricking={(7),(280),(320)};
const uint16[]Pids_WeaponShock={(5),(20),(384),(6),(386),(115)};
const uint16[]Pids_WeaponElectric={(160),(399),(116)};
const uint16[]Pids_WeaponUnarmed={(292),(293),(496),(497),(235),(21),(234),(407)};
const uint16[]Pids_WeaponSpecial={(270),(393),(371),(372),(427),(489),(498),(290),(291),(518),(520),(530),(531),(421),(390)};

const uint16[]Pids_AllArmor={(74),(1),(379),(265),(2),(380),(240),(17),(381),(239),(3),(232),(348),(349),(113),(524)};
const uint16[]Pids_ArmorLight={(74),(1),(379),(265)};
const uint16[]Pids_ArmorMedium={(2),(380),(240),(17),(381),(239)};
const uint16[]Pids_ArmorHeavy={(3),(232),(348),(349)};
const uint16[]Pids_ArmorRobes={(113)};
const uint16[]Pids_ArmorSpecial={(524)};

const uint16[]Pids_AllAmmo={(359),(35),(36),(363),(360),(121),(29),(30),(33),(31),(111),(357),(34),(95),(358),(14),(37),(32),(382),(38),(39),(163),(361),(362)};
const uint16[]Pids_Ammo={(359),(35),(36),(363),(360),(121),(29),(30),(33),(31),(111),(357),(34),(95),(358)};
const uint16[]Pids_AmmoOther={(14),(37),(32),(382),(38),(39),(163),(361),(362)};
const uint16[]Pids_AmmoSpecial={(274)};

const uint16[]Pids_AllDrugs={(40),(48),(49),(109),(144),(260),(273),(525),(106),(124),(125),(310),(311),(469),(53),(87),(110),(259),(71),(81),(103),(378),(424)};
const uint16[]Pids_DrugsPreparations={(40),(48),(49),(109),(144),(260),(273),(525)};
const uint16[]Pids_DrugsAlcohol={(106),(124),(125),(310),(311),(469)};
const uint16[]Pids_Drugs={(53),(87),(110),(259)};
const uint16[]Pids_DrugsOther={(71),(81),(103),(378)};
const uint16[]Pids_DrugsSpecial={(334),(473),(480),(481),(482),(424)};

const uint16[]Pids_MiscExplosions={(51),(85),(544)};
const uint16[]Pids_MiscActiveExplosions={(206),(209),(545),(222)};
const uint16[]Pids_MiscPartsBasic={(98),(92),(127),(271),(272),(276),(277),(278),(284),(285),(286),(318),(416),(542),(532),(534),(475),(535),(536),(537),(538),(50),(449),(539),(541)};
const uint16[]Pids_MiscPartsSelfSpecial={(89),(222),(229),(307),(419),(454),(364),(422),(479),(488)};
const uint16[]Pids_MiscPartsSpecial={(55),(253),(254),(258),(269),(356),(377)};
const uint16[]Pids_MiscPartsBody={(114),(251),(281),(282),(321),(322),(323),(324),(429),(484),(485),(507)};
const uint16[]Pids_MiscAllTools={(75),(77),(84),(308),(410),(411),(412),(47),(91),(408),(409),(428),(440),(289),(297),(543)};
const uint16[]Pids_MiscToolsTech={(75),(77),(84),(308),(410),(411),(412)};
const uint16[]Pids_MiscToolsMediacal={(47),(91),(408),(409),(428),(440)};
const uint16[]Pids_MiscToolsOther={(289),(297),(543)};
const uint16[]Pids_MiscToolsSpecial={(52),(54),(59)};
const uint16[]Pids_MiscOther={(101),(117),(126),(226),(227),(262),(295),(314),(315),(316),(317),(325),(326),(436),(437)};              

int FindInArray(int[]&arr,int value)
{
	uint count=arr.length();
	for(uint i=0;i<count;i++)
	{
		if(arr[i]==value)
		return i;
	}
	return-1;
}

bool FindInArray(int[]&arr,int id,int&index)
{
	for(uint i=0;i<arr.length();i++)
	{
		if(id==arr[i])
		{
			index=i;
			return true;
		}
	}
	index=-1;
	return false;
}  

int FindInArray(uint[]&arr,uint value)
{
	uint count=arr.length();
	for(uint i=0;i<count;i++)
	{
		if(arr[i]==value)
		return i;
	}
	return-1;
}

bool FindInArray(uint[]&arr,uint id,int&index)
{
	for(uint i=0;i<arr.length();i++)
	{
		if(id==arr[i])
		{
			index=i;
			return true;
		}
	}
	index=-1;
	return false;
}  

int FindInArray(uint16[]&arr,uint16 value)
{
	uint count=arr.length();
	for(uint i=0;i<count;i++)
	{
		if(arr[i]==value)
		return i;
	}
	return-1;
}  

int FindInArray(uint8[]&arr,uint8 value)
{
	uint count=arr.length();
	for(uint i=0;i<count;i++)
	{
		if(arr[i]==value)
		return i;
	}
	return-1;
}

bool FindInArray(uint8[]&arr,uint8 id,int&index)
{
	for(uint i=0;i<arr.length();i++)
	{
		if(id==arr[i])
		{
			index=i;
			return true;
		}
	}
	index=-1;
	return false;
}  

bool Present(int what,int[]&where)
{
	if(FindInArray(where,what)==-1)
	return false;
	else
	return true;
}

bool Present(uint what,uint[]&where)
{
	if(FindInArray(where,what)==-1)
	return false;
	else
	return true;
}

bool Present(uint16 what,uint16[]&where)
{
	if(FindInArray(where,what)==-1)
	return false;
	else
	return true;
}

void MergeArrays(uint16[]&arrayTo,uint16[]&arrayFrom)
{
	for(uint i=0,l=arrayFrom.length();i<l;i++)
	{
		arrayTo.insertLast(arrayFrom[i]);
	}
}

void MergeArrays(int[]&arrayTo,int[]&arrayFrom)
{
	for(uint i=0,l=arrayFrom.length();i<l;i++)
	{
		arrayTo.insertLast(arrayFrom[i]);
		arrayTo.insertLast(arrayFrom[i]);
	}
}          

import void QuakeScreen(Map&map)from"effects";
import bool AddPickPlane(Critter&npc,uint priority,Item@item,uint useItemId,bool toOpen)from"npc_planes";

uint CountWeight(Map@map,uint16 x,uint16 y)
{
	if(!(@map!=null))
	return 0;
	Item@[]items;
	map.GetItems(x,y,items);
	uint weight=0;
	for(uint i=0,l=items.length();i<l;i++)
	{
		weight+=items[i].Proto.Weight;
	}
	DeleteItems(items);
	return(((weight)>((50000)))?((50000)):(((weight)<(0))?(0):(weight)));
}

void AddRandomItems(Map@map,uint16 x,uint16 y,uint maxWeight)
{
	if(!(@map!=null))
	return;
	uint16[]pids;
	
	MergeArrays(pids,Pids_WeaponSmallGuns);
	MergeArrays(pids,Pids_WeaponMelee);
	MergeArrays(pids,Pids_WeaponEnergo);
	MergeArrays(pids,Pids_WeaponBigGuns);
	MergeArrays(pids,Pids_ArmorLight);
	MergeArrays(pids,Pids_ArmorMedium);
	MergeArrays(pids,Pids_ArmorHeavy);
	MergeArrays(pids,Pids_Ammo);
	MergeArrays(pids,Pids_Ammo);
	MergeArrays(pids,Pids_AllDrugs);
	MergeArrays(pids,Pids_MiscExplosions);
	MergeArrays(pids,Pids_MiscPartsBasic);
	MergeArrays(pids,Pids_MiscPartsBasic);
	MergeArrays(pids,Pids_MiscPartsBasic);
	MergeArrays(pids,Pids_MiscAllTools);
	MergeArrays(pids,Pids_MiscOther);
	MergeArrays(pids,Pids_MiscOther);
	uint curWeight=0;
	int16 triesNum=150;
	uint idx=0;
	uint16 pid=0;
	ProtoItem@proto;
	uint len=pids.length();
	uint weight=0;
	uint itemCount=0;
	while(triesNum>0&&curWeight<maxWeight)
	{
		triesNum--;
		itemCount=1;
		len=pids.length();
		idx=Random(0,len-1);
		pid=pids[idx];
		if(Present(pid,Pids_ArmorHeavy))
		{
			for(uint i=0,l=Pids_ArmorHeavy.length();i<l;i++)
			{
				pids.removeAt(FindInArray(pids,Pids_ArmorHeavy[i]));
			}
		}
		@proto=GetProtoItem(pid);
		weight=(((proto.Weight)>(proto.Weight))?(proto.Weight):(((proto.Weight)<(200))?(200):(proto.Weight)));
		if(Present(pid,Pids_Ammo))
		{
			itemCount=Random(1,120);
			weight*=itemCount;
		}
		if(curWeight+weight<=maxWeight)
		{
			pids.removeAt(FindInArray(pids,pid));
			curWeight+=weight;
			map.AddItem(x,y,pid,itemCount);
		}
	}
}

Critter@GetCritterInPlace(Critter&player,int x,int y)
{
	Map@map=player.GetMap();
	if(!(@map!=null))
	return null;
	return map.GetCritter(x,y);
}

Critter@GetRandomPlayer()
{
	int tries=20;
	uint locPid=0;
	Map@[]maps;
	Location@loc;
	Critter@[]players;
	Critter@player;
	while(tries>0)
	{
		tries--;
		
		locPid=Random((1),(44));
		@loc=GetLocationByPid(locPid,0);
		if(!(@loc!=null))
		continue;
		
		maps.resize(0);
		loc.GetMaps(maps);
		players.resize(0);
		for(uint i=0;i<maps.length();i++)
		maps[i].GetCritters(0,(0x01)|(0x10),players);
		
		if(players.length()>0)
		return players[Random(0,players.length()-1)];
	}
	return null;
}

bool d_CheckIsPlayerInPlace(Critter&player,Critter@npc,int x,int y)
{
	Critter@cr=GetCritterInPlace(player,x,y);
	if(!(@cr!=null))
	return false;
	return cr.IsPlayer();
}

bool d_CheckIsNpcInPlace(Critter&player,Critter@npc,int x,int y)
{
	Critter@cr=GetCritterInPlace(player,x,y);
	if(!(@cr!=null))
	return false;
	return cr.IsNpc();
}

bool d_CheckIsNotAnyCritterInPlace(Critter&player,Critter@npc,int x,int y)
{
	if(!(@player.GetMap()!=null))
	return false;
	return(!d_CheckIsNpcInPlace(player,npc,x,y)&&!d_CheckIsPlayerInPlace(player,npc,x,y));
}

void r_ChangeItems(Critter&cr,Critter@npc,int hexX,int hexY,int canOverweight)
{
	Map@map=cr.GetMap();
	if(!(@map!=null))
	return;
	uint weight=CountWeight(map,hexX,hexY);
	if(canOverweight<1)
	weight=(((weight)>((10000)))?((10000)):(((weight)<(0))?(0):(weight)));
	QuakeScreen(map);
	AddRandomItems(map,hexX,hexY,weight);
}  

void r_SwapCritters(Critter&player,Critter@npc,int hexX,int hexY)
{
	if(d_CheckIsNotAnyCritterInPlace(player,npc,hexX,hexY))
	return;
	Critter@cr=GetCritterInPlace(player,hexX,hexY);
	if(!(@cr!=null))
	return;
	Map@map=cr.GetMap();
	if(!(@map!=null))
	return;
	if(cr.IsNpc())
	{
		DeleteNpc(cr);
		Critter@enemy=map.AddNpc((73),hexX,hexY,1,null,null,null);
		if((@enemy!=null))
		{
			Critter@[]players;
			map.GetCritters(0,(0x01)|(0x10),players);
			for(uint i=0,l=players.length();i<l;i++)
			{
				enemy.AddEnemyInStack(players[i].Id);
			}
		}
	}
	else
	{
		Critter@newPlayer=GetRandomPlayer();
		if(!(@newPlayer!=null))
		return;
		Map@map2=newPlayer.GetMap();
		if(!(@map2!=null))
		return;
		uint16 hexX2=newPlayer.HexX;
		uint16 hexY2=newPlayer.HexY;
		newPlayer.TransitToGlobal(false);
		cr.TransitToMap(map2.Id,hexX2,hexY2,cr.Dir);
		newPlayer.TransitToMap(map.Id,hexX,hexY,newPlayer.Dir);
	}
}    

const uint[]EatPid=
{
	(81),(103),
	(226),(227),(284),(295),(378),
	(468),(539)
};

void _DogInit(Critter&dog,bool firstTime)
{
	dog.ModeBase[(517)]=1;
	dog.SetEvent((12),"_DogShowItemOnMap");
	dog.SetEvent((14),"_DogHideItemOnMap");
	dog.StatBase[(90)]=0;
}

void _DogShowItemOnMap(Critter&poorman,Item&item,bool added,Critter@dropper)
{
	
	if(poorman.StatBase[(90)]!=0)
	return;
	if(not poorman.IsNoPlanes())
	return; 
	
	for(uint i=0;i<EatPid.length();i++)
	{
		if(item.GetProtoId()!=EatPid[i])
		continue;
		
		poorman.SayMsg((2),(0),Random((2500),(2507)));
		AddPickPlane(poorman,0,item,0,true);
		poorman.StatBase[(90)]=int(item.Id);
	}
}

void _DogHideItemOnMap(Critter&poorman,Item&item,bool deleted,Critter@picker)
{
	
	if(uint(poorman.StatBase[(90)])!=item.Id)
	return;
	poorman.StatBase[(90)]=0;
	if(not(@picker!=null))
	return;
	if(picker.Id!=poorman.Id)
	{
		poorman.ErasePlane((3),true);
		poorman.Wait(3000);
	}
	
	else
	{
		poorman.DeleteItem(item.GetProtoId(),item.GetCount());
		poorman.Say((2),"Гав!");
		poorman.Wait(3000);
	}
}
