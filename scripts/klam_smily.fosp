

const uint16[]Pids_AllWeapon={(300),(122),(8),(22),(18),(404),(241),(313),(398),(388),(394),(10),(287),(299),(23),(405),(143),(351),(403),(500),(161),(162),(261),(353),(392),(94),(385),(242),(268),(354),(9),(296),(283),(352),(391),(332),(11),(400),(13),(12),(389),(395),(350),(355),(387),(16),(402),(390),(118),(401),(28),(120),(24),(406),(15),(233),(396),(397),(16),(402),(390),(118),(401),(28),(120),(24),(406),(15),(233),(396),(397),(159),(25),(26),(27),(79),(205),(365),(45),(19),(423),(426),(486),(4),(236),(517),(383),(319),(522),(7),(280),(320),(5),(20),(384),(6),(386),(115),(160),(399),(116),(292),(293),(496),(497),(235),(21),(234),(407)};
const uint16[]Pids_WeaponSmallGuns={(300),(122),(8),(22),(18),(404),(241),(313),(398),(388),(394),(10),(287),(299),(23),(405),(143),(351),(403),(500),(161),(162),(261),(353),(392),(94),(385),(242),(268),(354),(9),(296),(283),(352),(391),(332)};
const uint16[]Pids_WeaponPistols={(300),(122),(8),(22),(18),(404),(241),(313),(398),(388),(394)};
const uint16[]Pids_WeaponRifles={(10),(287),(299),(23),(405),(143),(351),(403),(500),(161),(162),(261),(353),(392)};
const uint16[]Pids_WeaponShotguns={(94),(385),(242),(268),(354)};
const uint16[]Pids_WeaponPistolMachineGun={(9),(296),(283),(352),(391),(332)};
const uint16[]Pids_WeaponBigGuns={(11),(400),(13),(12),(389),(395),(350),(355),(387)};
const uint16[]Pids_WeaponEnergo={(16),(402),(118),(401),(28),(120),(24),(406),(15),(233),(396),(397)};
const uint16[]Pids_WeaponLaser={(16),(402),(118),(401),(28),(120)};
const uint16[]Pids_WeaponPlasma={(24),(406),(15),(233)};
const uint16[]Pids_WeaponPulse={(396),(397)};
const uint16[]Pids_WeaponThrowing={(159),(25),(26),(27),(79),(205),(365),(45),(19),(423),(426),(486)};
const uint16[]Pids_WeaponGrenade={(159),(25),(26),(27)};
const uint16[]Pids_WeaponThrowingOther={(79),(205),(365),(45),(19),(423),(426),(486)};
const uint16[]Pids_WeaponMelee={(4),(236),(517),(383),(319),(522),(7),(280),(320),(5),(20),(384),(6),(386),(115),(160),(399),(116)};
const uint16[]Pids_WeaponCutting={(4),(236),(517),(383),(319),(522)};
const uint16[]Pids_WeaponPricking={(7),(280),(320)};
const uint16[]Pids_WeaponShock={(5),(20),(384),(6),(386),(115)};
const uint16[]Pids_WeaponElectric={(160),(399),(116)};
const uint16[]Pids_WeaponUnarmed={(292),(293),(496),(497),(235),(21),(234),(407)};
const uint16[]Pids_WeaponSpecial={(270),(393),(371),(372),(427),(489),(498),(290),(291),(518),(520),(530),(531),(421),(390)};

const uint16[]Pids_AllArmor={(74),(1),(379),(265),(2),(380),(240),(17),(381),(239),(3),(232),(348),(349),(113),(524)};
const uint16[]Pids_ArmorLight={(74),(1),(379),(265)};
const uint16[]Pids_ArmorMedium={(2),(380),(240),(17),(381),(239)};
const uint16[]Pids_ArmorHeavy={(3),(232),(348),(349)};
const uint16[]Pids_ArmorRobes={(113)};
const uint16[]Pids_ArmorSpecial={(524)};

const uint16[]Pids_AllAmmo={(359),(35),(36),(363),(360),(121),(29),(30),(33),(31),(111),(357),(34),(95),(358),(14),(37),(32),(382),(38),(39),(163),(361),(362)};
const uint16[]Pids_Ammo={(359),(35),(36),(363),(360),(121),(29),(30),(33),(31),(111),(357),(34),(95),(358)};
const uint16[]Pids_AmmoOther={(14),(37),(32),(382),(38),(39),(163),(361),(362)};
const uint16[]Pids_AmmoSpecial={(274)};

const uint16[]Pids_AllDrugs={(40),(48),(49),(109),(144),(260),(273),(525),(106),(124),(125),(310),(311),(469),(53),(87),(110),(259),(71),(81),(103),(378),(424)};
const uint16[]Pids_DrugsPreparations={(40),(48),(49),(109),(144),(260),(273),(525)};
const uint16[]Pids_DrugsAlcohol={(106),(124),(125),(310),(311),(469)};
const uint16[]Pids_Drugs={(53),(87),(110),(259)};
const uint16[]Pids_DrugsOther={(71),(81),(103),(378)};
const uint16[]Pids_DrugsSpecial={(334),(473),(480),(481),(482),(424)};

const uint16[]Pids_MiscExplosions={(51),(85),(544)};
const uint16[]Pids_MiscActiveExplosions={(206),(209),(545),(222)};
const uint16[]Pids_MiscPartsBasic={(98),(92),(127),(271),(272),(276),(277),(278),(284),(285),(286),(318),(416),(542),(532),(534),(475),(535),(536),(537),(538),(50),(449),(539),(541)};
const uint16[]Pids_MiscPartsSelfSpecial={(89),(222),(229),(307),(419),(454),(364),(422),(479),(488)};
const uint16[]Pids_MiscPartsSpecial={(55),(253),(254),(258),(269),(356),(377)};
const uint16[]Pids_MiscPartsBody={(114),(251),(281),(282),(321),(322),(323),(324),(429),(484),(485),(507)};
const uint16[]Pids_MiscAllTools={(75),(77),(84),(308),(410),(411),(412),(47),(91),(408),(409),(428),(440),(289),(297),(543)};
const uint16[]Pids_MiscToolsTech={(75),(77),(84),(308),(410),(411),(412)};
const uint16[]Pids_MiscToolsMediacal={(47),(91),(408),(409),(428),(440)};
const uint16[]Pids_MiscToolsOther={(289),(297),(543)};
const uint16[]Pids_MiscToolsSpecial={(52),(54),(59)};
const uint16[]Pids_MiscOther={(101),(117),(126),(226),(227),(262),(295),(314),(315),(316),(317),(325),(326),(436),(437)};              

int FindInArray(int[]&arr,int value)
{
	uint count=arr.length();
	for(uint i=0;i<count;i++)
	{
		if(arr[i]==value)
		return i;
	}
	return-1;
}

bool FindInArray(int[]&arr,int id,int&index)
{
	for(uint i=0;i<arr.length();i++)
	{
		if(id==arr[i])
		{
			index=i;
			return true;
		}
	}
	index=-1;
	return false;
}  

int FindInArray(uint[]&arr,uint value)
{
	uint count=arr.length();
	for(uint i=0;i<count;i++)
	{
		if(arr[i]==value)
		return i;
	}
	return-1;
}

bool FindInArray(uint[]&arr,uint id,int&index)
{
	for(uint i=0;i<arr.length();i++)
	{
		if(id==arr[i])
		{
			index=i;
			return true;
		}
	}
	index=-1;
	return false;
}  

int FindInArray(uint16[]&arr,uint16 value)
{
	uint count=arr.length();
	for(uint i=0;i<count;i++)
	{
		if(arr[i]==value)
		return i;
	}
	return-1;
}  

int FindInArray(uint8[]&arr,uint8 value)
{
	uint count=arr.length();
	for(uint i=0;i<count;i++)
	{
		if(arr[i]==value)
		return i;
	}
	return-1;
}

bool FindInArray(uint8[]&arr,uint8 id,int&index)
{
	for(uint i=0;i<arr.length();i++)
	{
		if(id==arr[i])
		{
			index=i;
			return true;
		}
	}
	index=-1;
	return false;
}  

bool Present(int what,int[]&where)
{
	if(FindInArray(where,what)==-1)
	return false;
	else
	return true;
}

bool Present(uint what,uint[]&where)
{
	if(FindInArray(where,what)==-1)
	return false;
	else
	return true;
}

bool Present(uint16 what,uint16[]&where)
{
	if(FindInArray(where,what)==-1)
	return false;
	else
	return true;
}

void MergeArrays(uint16[]&arrayTo,uint16[]&arrayFrom)
{
	for(uint i=0,l=arrayFrom.length();i<l;i++)
	{
		arrayTo.insertLast(arrayFrom[i]);
	}
}

void MergeArrays(int[]&arrayTo,int[]&arrayFrom)
{
	for(uint i=0,l=arrayFrom.length();i<l;i++)
	{
		arrayTo.insertLast(arrayFrom[i]);
		arrayTo.insertLast(arrayFrom[i]);
	}
}                         

uint[]GlobalGroups;
uint GlobalMapId;
int GlobalGeckoMax;
int GlobalGeckoCount;
int GlobalHumanCount;  

string i2s(int val)
{
	string tmp=val;
	return tmp;
}

void SetQuestState(Critter&player,int Status)
{
	GameVar@quest=GetLocalVar((3210),player.Id);
	if(not(@quest!=null))
	return;
	quest=Status;
}

int GetQuestState(Critter&player)
{
	GameVar@quest=GetLocalVar((3210),player.Id);
	if(not(@quest!=null))
	return 0;
	return quest.GetValue();
} 

void DeleteGeckoMap()
{
	GameVar@game_map=GetGlobalVar((160));
	if(not(@game_map!=null))
	return;
	
	if(game_map.GetValue()!=0)
	{
		Location@loc=GetLocation(game_map.GetValue());
		
		if(not(@loc!=null))
		{
			
			game_map=0;
			return;
		}
		
		DeleteLocation(loc.Id);
		
		game_map=0;
	}
}   

uint r_CheckGroup(Critter&player,Critter@npc,int val)
{
	Critter@[]groups;
	groups.insertLast(@player);
	player.GetFollowGroup((0x0F),groups); 
	
	if(player.Stat[(3)]<(3))
	return 61;  
	
	if(groups.length()==1)
	{
		return 57; 
		
	}  
	
	if(groups.length()<(3))
	return 58; 
	
	if(groups.length()>(6))
	return 59;  
	
	for(uint i=0;i<groups.length();i++)
	if((groups[i].Stat[(77)]>(3)))
	return 56;  
	
	for(uint i=0;i<groups.length();i++)
	if(GetDistantion(npc.HexX,npc.HexY,groups[i].HexX,groups[i].HexY)>7)
	{
		
		return 55;
	} 
	
	return 53;
} 

bool d_GroupLevelIsBad(Critter&player,Critter@npc,int val)
{
	Critter@[]groups;
	groups.insertLast(@player);
	player.GetFollowGroup((0x0F),groups);
	for(uint i=0;i<groups.length();i++)
	if(groups[i].Cond==(1))
	if((groups[i].Stat[(77)]>1)and((@groups[i].GetItem(0,(3))!=null)))
	return false;
	
	return true;
} 

bool d_GroupLevelIsOk(Critter&player,Critter@npc,int val)
{
	Critter@[]groups;
	groups.insertLast(@player);
	player.GetFollowGroup((0x0F),groups);
	for(uint i=0;i<groups.length();i++)
	if(groups[i].Cond==(1))
	if((groups[i].Stat[(77)]==(3))or(groups[i].Stat[(0)]==10)or(groups[i].Stat[(2)]==10))
	return true; 
	
	return false;
} 

void r_HintCreationGroup(Critter&player,Critter@npc,int val)
{
	string text=
	"Чтобы СОЗДАТЬ ГРУППУ: вы ВСЕ должны ВЫБРАТЬ ОДНОГО лидера. "+
	"Это делается через меню (правой кнопкой) на игроке который будет лидером, "+
	"и выборе пункта с изображением стрелочки указывающей на группу людей.";
	
	player.Say((11),"-=[ Подсказка: ]=-");
	player.Say((11),text);  
	
} 

void r_BadHunterWisper(Critter&player,Critter@npc,int val)
{
	if(Random(1,2)==1)
	npc.Say((8),"Эх, совсем зеленые еще...");
	else
	npc.Say((6),"тяжело вздыхает");
} 

void r_WarnToBadHunter(Critter&player,Critter@npc,int val)
{
	Critter@[]groups;
	player.GetFollowGroup((0x0F),groups);
	for(uint i=0;i<groups.length();i++)
	if(GetDistantion(npc.HexX,npc.HexY,groups[i].HexX,groups[i].HexY)<5)
	RunDialog(groups[i],222,npc.HexX,npc.HexY,false);
} 

bool r_CheckQuestAvailable(Critter&player,Critter@npc,int val)
{
	return true;
} 

bool r_CheckQuestIsRun(Critter&player,Critter@npc,int val)
{
	GameVar@game_map=GetGlobalVar((160));
	GameVar@timeout=GetGlobalVar((161));    
	
	if(
	(uint(timeout.GetValue())>__FullSecond)or
	(timeout.GetValue()==0)or
	(game_map.GetValue()==0)
	)
	{
		
		DeleteGeckoMap();
		for(uint i=0;i<GlobalGroups.length();i++)
		{
			QuestCompleteNotify(GlobalGroups[i]);
		}
		timeout=0;
	}
	
	if(game_map.GetValue()==0)
	return val==0;
	else
	return val!=0;
}   

void r_GotoHunter(Critter&player,Critter@npc,int val)
{
	Critter@[]groups;
	groups.insertLast(@player);
	player.GetFollowGroup((0x0F),groups); 
	
	for(uint i=0;i<groups.length();i++)
	SetQuestState(groups[i],1);       
	
	int gecko=0;
	int groupHp=0;
	for(uint i=0;i<groups.length();i++)
	{
		
		groupHp=groupHp+groups[i].Stat[(7)];
		
		gecko+=(((groups[i].Stat[(77)])>((3)))?((3)):(((groups[i].Stat[(77)])<(1))?(1):(groups[i].Stat[(77)])))*2;
		if(not(@groups[i].GetItem(0,(3))!=null))
		gecko--;
	} 
	
	int hp_tmp=0;
	if(groupHp>gecko*(25))
	{
		Log("hp rebalance detect");
		gecko=gecko+((groupHp-gecko*(25))/(25));
	}
	
	int mather_type=(81);
	if(gecko>30)
	mather_type=(240);
	else if(gecko>20)
	mather_type=(86);
	else if(gecko>10)
	mather_type=(83);
	gecko=(((gecko)>((16)))?((16)):(((gecko)<(3))?(3):(gecko)));
	if(gecko>8)
	gecko=gecko+Random(-1,2);   
	
	int x,y;
	if(Random(1,4)!=1)
	{
		
		x=-1;
		y=-1;
	}
	else
	{
		x=Random(-1,1);
		y=Random(-1,1);
		if(x==0 and y==0)
		{
			x=-2;
			y=-2;
		}
	}
	
	GameVar@game_map=GetGlobalVar((160));
	GameVar@game_time=GetGlobalVar((161));
	game_time=__FullSecond+(60*60*24); 
	
	DeleteGeckoMap(); 
	
	GlobalMapId=CreateLocation(
	Random((101),(112)),
	(375)+x*__GlobalMapZoneLength+Random(-(__GlobalMapZoneLength/2),(__GlobalMapZoneLength/2)),
	(125)+y*__GlobalMapZoneLength+Random(-(__GlobalMapZoneLength/2),(__GlobalMapZoneLength/2)),
	groups); 
	
	game_map=GlobalMapId;
	
	Location@loc=GetLocation(GlobalMapId);
	loc.Visible=false; 
	
	loc.AutoGarbage=false;
	loc.Radius=8;
	
	if(not(@loc!=null))
	return;
	Map@map=loc.GetMapByIndex(0);
	
	map.SetEvent((6),"map_incoming");
	map.SetEvent((7),"map_leave");
	map.SetEvent((0),"map_deleting");  
	
	uint16 x_=0,y_=0;
	if(not map.GetEntireCoords(0,0,x_,y_))
	{
		x=110;
		y=110;
	}
	else
	{
		x=x_;
		y=y_;
	} 
	
	Critter@cr;
	for(int i=0;i<gecko;i++)
	{
		if(mather_type!=0)
		{
			
			int[]params={(104),(5020),(106),(24),(107),(1),(84),-1};
			@cr=map.AddNpc(mather_type,x,y,Random(0,5),params,null,"mob@_MobInit");
			mather_type=0;
		}
		else
		{
			
			int[]params={(104),(5020),(106),(24),(107),(1),(84),-1};
			@cr=map.AddNpc((80),x+Random(0,10),y+Random(0,10),Random(0,5),params,null,"mob@_MobInit");
		}
		
		if((@cr!=null))
		{
			cr.StatBase[(91)]=cr.Stat[(72)];
			
			cr.SetEvent((16),"gecko_damage");
			cr.SetEvent((2),"gecko_dead");
		}
		else
		Log("Critter creation error");
	} 
	
	GlobalGeckoCount=gecko;
	GlobalGeckoMax=gecko;
	GlobalHumanCount=0; 
	
	GlobalGroups.resize(groups.length());
	for(uint i=0;i<groups.length();i++)
	GlobalGroups[i]=groups[i].Id;
}   

int GetExpa(Critter&player)
{
	if(player.Stat[(77)]>(3)*2)
	return 0;
	int dmg=player.StatBase[(91)];
	int kls=player.StatBase[(92)];
	int aid=player.StatBase[(93)];
	if(dmg==0 and kls==0 and aid==0)
	return 0;
	int expa=200;
	if(dmg>(25)*2 or aid>0 or kls>0)
	expa+=(((player.Stat[(77)])>((3)))?((3)):(((player.Stat[(77)])<(1))?(1):(player.Stat[(77)])))*100;
	
	return expa;
} 

void QuestCompleteNotify(uint playerId)
{
	Critter@player=GetCritter(playerId); 
	
	if(not(@player!=null))
	return;
	
	if(GetQuestState(player)==2)
	{
		SetQuestState(player,3);     
		
		player.StatBase[(76)]+=GetExpa(player);
	}
	else if(GetQuestState(player)==1)
	SetQuestState(player,5);
	else
	SetQuestState(player,0);
}    

void map_leave(Map&map,Critter&crit)
{
	if(crit.IsPlayer())
	{
		GlobalHumanCount--;
		if(GlobalHumanCount==0)
		DeleteGeckoMap();
		
		remove_events(crit);
		
		if(not crit.IsDead())
		{
			if(GlobalGeckoCount>0)
			{
				if(GetQuestState(crit)==2)
				{
					SetQuestState(crit,6);
				}
			}
		}
		crit.StatBase[(91)]=0;
		crit.StatBase[(92)]=0;
		crit.StatBase[(93)]=0;
	}
} 

void map_incoming(Map&map,Critter&player)
{
	
	if(not map.IsTurnBased()&&map.IsTurnBasedAvailability())
	map.BeginTurnBased(player);
	
	if(player.IsPlayer())
	{
		if(GlobalHumanCount>0)
		{
			Location@loc=GetLocation(map.Id);
			
		}
		
		SetQuestState(player,2);
		GlobalHumanCount++;
		player.StatBase[(91)]=0;
		player.StatBase[(92)]=0;
		player.StatBase[(93)]=0;
		player.SetEvent((21),"player_doctor");
		player.SetEvent((2),"player_dead");
	}
} 

void remove_events(Critter&player)
{
	player.SetEvent((21),"");
	player.SetEvent((2),"");
} 

void player_dead(Critter&player,Critter@killer)
{
	remove_events(player);
	SetQuestState(player,4);
	if(player.StatBase[(92)]>GlobalGeckoMax/2)
	{
		SetQuestState(player,4);
		player.StatBase[(76)]+=500;
	}
	else
	{
		SetQuestState(player,4);
		player.StatBase[(76)]+=100;
	}
} 

void map_deleting(Map&map,bool deleted)
{
	Location@loc=map.GetLocation();
	for(uint i=0;i<GlobalGroups.length();i++)
	{
		Critter@player=GetCritter(GlobalGroups[i]);
		if((@player!=null))
		{
			player.UnsetKnownLoc(true,loc.Id);
		}
	}
	
	GameVar@mapid=GetGlobalVar((160));
	mapid=0;
}

bool player_doctor(Critter&crit,int skill,Critter@onCritter,Item@onItem,Scenery@onScenery)
{
	
	if(skill==(206))
	if((@onCritter!=null))
	if(onCritter.IsPlayer())
	if(crit.Id!=onCritter.Id)
	if(crit.Timeout[(230)]<=0)
	crit.StatBase[(93)]++;
	
	return false;
}

bool gecko_damage(Critter&crit,Critter&attacker)
{
	
	int hp=(crit.Stat[(72)]<0?0:crit.Stat[(72)]);
	if(crit.Stat[(72)]>crit.StatBase[(91)])
	hp=crit.StatBase[(91)];
	
	int dmg=crit.StatBase[(91)]-hp;
	if(dmg>(25))
	dmg=(25);
	crit.StatBase[(91)]=hp;
	attacker.StatBase[(91)]=attacker.StatBase[(91)]+dmg;
	
	return false;
}

void gecko_dead(Critter&crit,Critter@killer)
{
	if(killer.IsPlayer())
	killer.StatBase[(92)]++;
	GlobalGeckoCount--;
	
	if(GlobalGeckoCount==0)
	{ 
		
		for(uint i=0;i<GlobalGroups.length();i++)
		QuestCompleteNotify(GlobalGroups[i]);
		GameVar@mapid=GetGlobalVar((160));
		if((@mapid!=null)&&mapid.GetValue()!=0)
		{
			Location@loc=GetLocation(mapid.GetValue());
			loc.AutoGarbage=true;
			mapid=0;
		}
	}
}
