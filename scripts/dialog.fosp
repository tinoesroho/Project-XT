

import int RollVsSkill(Critter&cr,uint skillIndex,int bonus)from"stdlib";  

import bool IsSuccessRvS(int val)from"stdlib";  

import bool IsCriticalRvS(int val)from"stdlib";  

import void HealCritter(Critter&player)from"stdlib";  

import bool TransitToLoc(Critter&cr,uint16 locPid,uint mapIndex,uint entranceNum)from"stdlib";  

import bool TransitToMap(Critter&cr,uint16 mapPid,uint entranceNum)from"stdlib";  

import bool TransitToNewLocation(Critter&cr,uint16 locPid)from"stdlib";  

import void InfoMessage(Critter&player,Critter&npc,uint strNum)from"stdlib";  

import void NpcMessageNorm(Critter&npc,uint strNum)from"stdlib";  

import void NpcMessageShout(Critter&npc,uint strNum)from"stdlib";  

import void NpcMessageWhisp(Critter&npc,uint strNum)from"stdlib";  

import void NpcMessageEmo(Critter&npc,uint strNum)from"stdlib";        

import void TimeoutSet(Critter&npc,uint gameHours)from"stdlib";  

import void TimeoutSub(Critter&npc,uint gameHoursSub)from"stdlib";  

import void TimeoutAdd(Critter&npc,uint gameHoursAdd)from"stdlib";  

import void GroupSetVar(Critter&player,uint16 varId,int value)from"stdlib";  

import void Warn(Critter&player,int npcRole)from"stdlib";  

import void DoorControl(Critter&player,uint entireNum,bool toOpen)from"stdlib";  

import bool DialogNpc(Critter&player,int role)from"stdlib";  

import Critter@GetNearCritterWithRole(Map@map,uint16 hexX,int hexY,uint radius,int role)from"stdlib";

import void Kill(Critter&player,int type)from"stdlib";

import void Damage(Critter&player,int dmg,int type,int dir)from"stdlib";

import void AttackStop(Critter&player,int npcRole)from"stdlib";

import void Attack(Critter&player,int npcRole)from"stdlib";
import bool TransitToMap(Critter&cr,int locPid,int mapIndex,int entranceNum)from"stdlib";

import void SkillUp(Critter&player,int skill)from"stdlib";

import void QuestRewardExperience(Critter&cr,uint8 base)from"stdlib"; 

import void DropDrugEffects(Critter&cr)from"drugs";
import void DropRadiation(Critter&cr)from"radiation";
import bool AddAttackPlane(Critter&npc,uint priority,uint critId)from"npc_planes";
import Location@CreateLocationForCritter(Critter&player,int locPid,int worldX,int worldY,int delta,int varNum)from"location";
import void SetLocationDeleteTime(Location&loc,uint time)from"location";    

import void FlushScreen(Critter&cr,bool fadeOut,uint timeMs)from"effects";

int DFGroupCount(Critter&player,Critter@npc)
{
	Critter@leader;
	if(not(@player.GetFollowLeader()!=null))
	@leader=player;
	else
	@leader=player.GetFollowLeader();
	
	Critter@[]groups;
	groups.insertLast(@leader);
	leader.GetFollowGroup((0x01),groups);
	return groups.length();
} 

bool d_GroupCountMore(Critter&player,Critter@npc,int val)
{
	return DFGroupCount(player,npc)>=val;
}

bool d_GroupCountLess(Critter&player,Critter@npc,int val)
{
	return DFGroupCount(player,npc)<val;
}  

bool d_GroupLevelMore(Critter&player,Critter@npc,int val)
{
	Critter@[]groups;
	groups.insertLast(@player);
	player.GetFollowGroup((0x01),groups);
	for(uint i=0;i<groups.length();i++)
	if(groups[i].Stat[(77)]<val)
	return false;
	return true;
}

bool d_GroupLevelLess(Critter&player,Critter@npc,int val)
{
	Critter@[]groups;
	groups.insertLast(@player);
	player.GetFollowGroup((0x01),groups);
	for(uint i=0;i<groups.length();i++)
	if(groups[i].Stat[(77)]>val)
	return false;
	return true;
} 

bool d_IsToHeal(Critter&player,Critter@npc)
{
	return player.Stat[(72)]<player.Stat[(7)];
} 

bool d_IsLocationVisible(Critter&player,Critter@npc,int LocNum)
{
	return player.IsKnownLoc(false,uint16(LocNum));
} 

bool d_IsLocationNotVisible(Critter&player,Critter@npc,int LocNum)
{
	return not player.IsKnownLoc(false,uint16(LocNum));
} 

bool d_IsAddict(Critter&player,Critter@npc)
{
	for(uint i=(__AddictionBegin);i<=(__AddictionEnd);i++)
	if(player.Addiction[i]!=0)
	return true;
	return false;
} 

bool d_IsNotAddict(Critter&player,Critter@npc)
{
	return not d_IsAddict(player,npc);
} 

bool d_GroupPresent(Critter&player,Critter@npc)
{
	return DFGroupCount(player,npc)>1;
} 

bool d_NotGroupPresent(Critter&player,Critter@npc)
{
	return not d_GroupPresent(player,npc);
}      

bool d_TimeoutCheck(Critter&player,Critter@npc)
{
	GameVar@t=GetLocalVar((6160),npc.Id);
	if(not(@t!=null))
	return true;
	if(__FullSecond>=uint(t.GetValue()))
	return true;
	else
	return false;
}   

bool d_NotTimeoutCheck(Critter&player,Critter@npc)
{
	return not d_TimeoutCheck(player,npc);
}   

bool d_TimeoutOk(Critter&player,Critter@npc)
{
	if(!(@npc!=null))
	return false;
	GameVar@to=GetUnicumVar((2031),player.Id,npc.Id);
	if(!(@to!=null))
	return false;
	uint time=to.GetValue();
	if(time==0)
	return true;
	return(time<__FullSecond);
} 

bool d_NotTimeoutOk(Critter&player,Critter@npc)
{
	return!d_TimeoutOk(player,npc);
}

bool d_CheckMonth(Critter&playe,Critter@npc,int monthFrom,int monthTo)
{
	return(int(__Month)<=monthTo&&int(__Month)>=monthFrom);
}   

bool d_IsLife(Critter&player,Critter@npc,int v0,int v1)
{
	Map@map=GetMapByPid(v1,0);
	if(not(@map!=null))
	{
		Log("error");
		return false;
	}
	Critter@crit=map.GetNpc(v0,(0x0F)|(0x20),0);
	if(not(@crit!=null))
	{
		Log("error");
		return false;
	}
	if(crit.IsLife())
	return true;
	else
	return false;
} 

bool d_IsDead(Critter&player,Critter@npc,int v0,int v1)
{
	return not d_IsLife(player,npc,v0,v1);
} 

void dlg_TrySpy(Critter&player,Critter@banker,string@playerName)
{
	if(!(@banker!=null))
	return;
	if(!((@playerName!=null)&&playerName.length()>0)||(not(@playerName!=null)))
	return;
	if(playerName.length()<=1)
	return;
	
	uint BankerDialog=banker.Stat[(104)];
	uint DlgStr=100;
	string lexems="$Victim "+playerName;
	
	Critter@cr=GetPlayer(playerName);
	if(!(@cr!=null))
	{
		player.SayMsg((12),(1),(1000000000+(BankerDialog)*100000+(DlgStr+0)),lexems);
		return;
	}
	
	if(player.Id==cr.Id)
	{
		player.SayMsg((12),(1),(1000000000+(BankerDialog)*100000+(DlgStr+9)));
		return;
	} 
	
	if(cr.Stat[(71)]==(0))
	{
		lexems+="$Gender @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+10))+"@";
	}
	else if(cr.Stat[(71)]==(1))
	{
		lexems+="$Gender @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+11))+"@";
	}
	else
	{
		lexems+="$Gender @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+12))+"@";
	} 
	
	if(cr.Stat[(83)]/cr.Stat[(77)]<=2)
	{
		lexems+="$ReplCount @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+13))+"@";
	}
	else if(cr.Stat[(83)]/cr.Stat[(77)]>2&&cr.Stat[(83)]/cr.Stat[(77)]<10)
	{
		lexems+="$ReplCount @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+14))+"@";
	}
	else
	{
		lexems+="$ReplCount @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+15))+"@";
	} 
	
	lexems+="$Born "+(__Year-cr.Stat[(70)]);
	
	if(player.Skill[(214)]>=40-(player.Stat[(3)]+player.Stat[(6)])/2)
	{
		player.SayMsg((12),(1),(1000000000+(BankerDialog)*100000+(DlgStr+1)),lexems);
	} 
	
	if(player.Skill[(214)]>=50-(player.Stat[(3)]+player.Stat[(6)])/2)
	{
		lexems="";
		lexems+="$Level "+cr.Stat[(77)];
		player.SayMsg((13),(1),(1000000000+(BankerDialog)*100000+(DlgStr+2)),lexems);
	} 
	
	if(player.Skill[(214)]>=60-(player.Stat[(3)]+player.Stat[(6)])/2)
	{
		int[]Values={-2147483647,-1000,-750,-500,-250,250,500,750,1000};
		int[]Descs={6125,6122,6119,6116,6113,6110,6107,6104,6101};
		int CurKarma=0;
		for(uint i=0;i<Values.length();i++)
		{
			if(int(cr.Stat[(80)])>=Values[i])
			{
				CurKarma=Descs[i];
			}
			else
			{
				break;
			}
		}
		player.SayMsg((13),(3),CurKarma);
	} 
	
	if(player.Skill[(214)]>=70-(player.Stat[(3)]+player.Stat[(6)])/2)
	{
		lexems="";
		
		if(cr.StatBase[(0)]<4)
		{
			lexems+="$Strength @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+16))+"@";
		}
		else if(cr.StatBase[(0)]>=4&&cr.StatBase[(0)]<7)
		{
			lexems+="$Strength"+"";
		}
		else if(cr.StatBase[(0)]>=7&&cr.StatBase[(0)]<=8)
		{
			lexems+="$Strength @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+17))+"@";
		}
		else
		{
			lexems+="$Strength @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+18))+"@";
		}
		
		if(cr.StatBase[(1)]<4)
		{
			lexems+="$Perception @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+19))+"@";
		}
		else if(cr.StatBase[(1)]>=4&&cr.StatBase[(1)]<7)
		{
			lexems+="$Perception"+"";
		}
		else if(cr.StatBase[(1)]>=7&&cr.StatBase[(1)]<=8)
		{
			lexems+="$Perception @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+20))+"@";
		}
		else
		{
			lexems+="$Perception @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+21))+"@";
		}
		
		if(cr.StatBase[(2)]<4)
		{
			lexems+="$Endurance @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+22))+"@";
		}
		else if(cr.StatBase[(2)]>=4&&cr.StatBase[(2)]<7)
		{
			lexems+="$Endurance"+"";
		}
		else if(cr.StatBase[(2)]>=7&&cr.StatBase[(2)]<=8)
		{
			lexems+="$Endurance @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+23))+"@";
		}
		else
		{
			lexems+="$Endurance @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+24))+"@";
		}
		
		if(cr.StatBase[(3)]<4)
		{
			lexems+="$Charisma @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+25))+"@";
		}
		else if(cr.StatBase[(3)]>=4&&cr.StatBase[(3)]<7)
		{
			lexems+="$Charisma"+"";
		}
		else if(cr.StatBase[(3)]>=7&&cr.StatBase[(3)]<=8)
		{
			lexems+="$Charisma @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+26))+"@";
		}
		else
		{
			lexems+="$Charisma @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+27))+"@";
		}
		
		if(cr.StatBase[(4)]<4)
		{
			lexems+="$Intellect @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+28))+"@";
		}
		else if(cr.StatBase[(4)]>=4&&cr.StatBase[(4)]<7)
		{
			lexems+="$Intellect"+"";
		}
		else if(cr.StatBase[(4)]>=7&&cr.StatBase[(4)]<=8)
		{
			lexems+="$Intellect @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+29))+"@";
		}
		else
		{
			lexems+="$Intellect @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+30))+"@";
		}
		
		if(cr.StatBase[(5)]<4)
		{
			lexems+="$Agility @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+31))+"@";
		}
		else if(cr.StatBase[(5)]>=4&&cr.StatBase[(5)]<7)
		{
			lexems+="$Agility"+"";
		}
		else if(cr.StatBase[(5)]>=7&&cr.StatBase[(5)]<=8)
		{
			lexems+="$Agility @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+32))+"@";
		}
		else
		{
			lexems+="$Agility @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+33))+"@";
		}
		
		if(cr.StatBase[(6)]<4)
		{
			lexems+="$Luck @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+34))+"@";
		}
		else if(cr.StatBase[(6)]>=4&&cr.StatBase[(6)]<7)
		{
			lexems+="$Luck"+"";
		}
		else if(cr.StatBase[(6)]>=7&&cr.StatBase[(6)]<=8)
		{
			lexems+="$Luck @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+35))+"@";
		}
		else
		{
			lexems+="$Luck @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+36))+"@";
		}
		player.SayMsg((13),(1),(1000000000+(BankerDialog)*100000+(DlgStr+3)),lexems);
	} 
	
	if(player.Skill[(214)]>=80-(player.Stat[(3)]+player.Stat[(6)])/2)
	{
		
		uint[]CombatSkills={(200),(201),(202),(203),(204),(205)};
		uint[]TagSkills={cr.TagSkill[(226)],cr.TagSkill[(227)],cr.TagSkill[(228)],cr.TagSkill[(229)]};
		
		for(uint i=0;i<CombatSkills.length();i++)
		{
			for(uint t=0;t<TagSkills.length();t++)
			{
				if(CombatSkills[i]==TagSkills[t])
				{
					if(cr.Skill[TagSkills[t]]<100)
					{
						lexems="$CmbtSkillTag @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+60+Random(0,1)))+"@";
						switch(TagSkills[t])
						{
							case(200):
							lexems+="$CombatSkillMax @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+41))+"@";
							break;
							case(201):
							lexems+="$CombatSkillMax @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+42))+"@";
							break;
							case(202):
							lexems+="$CombatSkillMax @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+43))+"@";
							break;
							case(203):
							lexems+="$CombatSkillMax @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+44))+"@";
							break;
							case(204):
							lexems+="$CombatSkillMax @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+45))+"@";
							break;
							case(205):
							lexems+="$CombatSkillMax @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+46))+"@";
							break;
							default:
							break;
						}
						player.SayMsg((13),(1),(1000000000+(BankerDialog)*100000+(DlgStr+6)),lexems);
					}
				}
			}
		}
		
	} 
	
	if(player.Skill[(214)]>=85-(player.Stat[(3)]+player.Stat[(6)])/2)
	{
		uint[]Skills={(206),(207),(208),(209),(210),(211),(212),(213),(214),(215),(216),(217)};
		uint[]TagSkills={cr.TagSkill[(226)],cr.TagSkill[(227)],cr.TagSkill[(228)],cr.TagSkill[(229)]};
		for(uint i=0;i<Skills.length();i++)
		{
			for(uint t=0;t<TagSkills.length();t++)
			{
				if(Skills[i]==TagSkills[t])
				{
					if(cr.Skill[TagSkills[t]]<100)
					{
						lexems="$SkillTag @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+62+Random(0,2)))+"@";
						switch(TagSkills[t])
						{
							case(206):
							lexems+="$AnySkill @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+65))+"@";
							break;
							case(207):
							lexems+="$AnySkill @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+66))+"@";
							break;
							case(208):
							lexems+="$AnySkill @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+67))+"@";
							break;
							case(209):
							lexems+="$AnySkill @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+68))+"@";
							break;
							case(210):
							lexems+="$AnySkill @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+69))+"@";
							break;
							case(211):
							lexems+="$AnySkill @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+70))+"@";
							break;
							case(212):
							lexems+="$AnySkill @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+71))+"@";
							break;
							case(213):
							lexems+="$AnySkill @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+72))+"@";
							break;
							case(214):
							lexems+="$AnySkill @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+73))+"@";
							break;
							case(215):
							lexems+="$AnySkill @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+74))+"@";
							break;
							case(216):
							lexems+="$AnySkill @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+75))+"@";
							break;
							case(217):
							lexems+="$AnySkill @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+76))+"@";
							break;
							default:
							break;
						}
						player.SayMsg((13),(1),(1000000000+(BankerDialog)*100000+(DlgStr+7)),lexems);
					}
				}
			}
		}
		
	} 
	
	if(player.Skill[(214)]>=90-(player.Stat[(3)]+player.Stat[(6)])/2)
	{
		
		lexems="";
		int CurSkill=0;
		int MaxSkill=0;
		uint[]CombatSkills={(200),(201),(202),(203),(204),(205)};
		
		for(uint i=0;i<CombatSkills.length();i++)
		{
			if(CurSkill<cr.Skill[CombatSkills[i]])
			{
				CurSkill=cr.Skill[CombatSkills[i]];
				MaxSkill=CombatSkills[i];
			}
		}
		if(CurSkill<90)
		{
			lexems+="$CombatSkillLvl @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+37))+"@";
			lexems+="$CombatSkillMax";
		}
		else
		{
			if(CurSkill>=90&&CurSkill<150)
			lexems+="$CombatSkillLvl @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+38))+"@";
			if(CurSkill>=150&&CurSkill<200)
			lexems+="$CombatSkillLvl @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+39))+"@";
			if(CurSkill>=200)
			lexems+="$CombatSkillLvl @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+40))+"@";
			switch(MaxSkill)
			{
				case(200):
				lexems+="$CombatSkillMax @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+41))+"@";
				break;
				case(201):
				lexems+="$CombatSkillMax @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+42))+"@";
				break;
				case(202):
				lexems+="$CombatSkillMax @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+43))+"@";
				break;
				case(203):
				lexems+="$CombatSkillMax @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+44))+"@";
				break;
				case(204):
				lexems+="$CombatSkillMax @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+45))+"@";
				break;
				case(205):
				lexems+="$CombatSkillMax @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+46))+"@";
				break;
				default:
				break;
			}
		}
		player.SayMsg((13),(1),(1000000000+(BankerDialog)*100000+(DlgStr+4)),lexems);
		
	} 
	
	if(player.Skill[(214)]>=100-(player.Stat[(3)]+player.Stat[(6)])/2)
	{
		
		lexems="";
		int CurSkill=0;
		int MaxSkill=0;
		uint[]Skills={(206),(207),(208),(209),(210),(211),(212),(213),(214),(215),(216),(217)};
		
		for(uint i=0;i<Skills.length();i++)
		{
			if(CurSkill<cr.Skill[Skills[i]])
			{
				CurSkill=cr.Skill[Skills[i]];
				MaxSkill=Skills[i];
			}
		}
		if(CurSkill<=90)
		{
			lexems+="$AnySkill @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+47))+"@";
		}
		else
		{
			switch(MaxSkill)
			{
				case(206):
				lexems+="$AnySkill @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+48))+"@";
				break;
				case(207):
				lexems+="$AnySkill @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+49))+"@";
				break;
				case(208):
				lexems+="$AnySkill @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+50))+"@";
				break;
				case(209):
				lexems+="$AnySkill @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+51))+"@";
				break;
				case(210):
				lexems+="$AnySkill @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+52))+"@";
				break;
				case(211):
				lexems+="$AnySkill @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+53))+"@";
				break;
				case(212):
				lexems+="$AnySkill @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+54))+"@";
				break;
				case(213):
				lexems+="$AnySkill @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+55))+"@";
				break;
				case(214):
				lexems+="$AnySkill @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+56))+"@";
				break;
				case(215):
				lexems+="$AnySkill @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+57))+"@";
				break;
				case(216):
				lexems+="$AnySkill @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+58))+"@";
				break;
				case(217):
				lexems+="$AnySkill @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+59))+"@";
				break;
				default:
				break;
			}
		}
		player.SayMsg((13),(1),(1000000000+(BankerDialog)*100000+(DlgStr+5)),lexems);
		
	} 
	
	if(player.Skill[(214)]>=110-(player.Stat[(3)]+player.Stat[(6)])/2)
	{
		lexems="";
		lexems+="$ReplMoney "+cr.Stat[(82)]+"$ReplCount "+cr.Stat[(83)];
		player.SayMsg((13),(1),(1000000000+(BankerDialog)*100000+(DlgStr+8)),lexems);
	}
}

void dlg_ForSearching(Critter&player,Critter@barman,string@playerName)
{
	if(!(@barman!=null))
	return;
	if(!((@playerName!=null)&&playerName.length()>0)||(not(@playerName!=null)))
	return;
	if(playerName.length()<=1)
	return;
	uint BankerDialog=barman.Stat[(104)];
	uint DlgStr=200;
	
	string lexems="$Victim "+playerName;
	
	if(barman.Stat[(71)]==(1))
	{
		lexems+="$BarmanGen @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+10))+"@";
	}
	else
	{
		lexems+="$BarmanGen @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+9))+"@";
	}
	
	Critter@cr=GetPlayer(playerName);
	if(!(@cr!=null))
	{
		player.SayMsg((12),(1),(1000000000+(BankerDialog)*100000+(DlgStr+0)),lexems);
		return;
	}
	
	if(cr.Stat[(71)]==(1))
	{
		lexems+="$Gender @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+8))+"@";
	}
	else
	{
		lexems+="$Gender @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+7))+"@";
	}
	player.SayMsg((12),(1),(1000000000+(BankerDialog)*100000+(DlgStr+11)),lexems);
	return;
}

void dlg_TrySearching(Critter&player,Critter@barman,string@playerName)
{ 
	
	if(!(@barman!=null))
	return;
	if(!((@playerName!=null)&&playerName.length()>0)||(not(@playerName!=null)))
	return;
	if(playerName.length()<=1)
	return;
	uint BankerDialog=barman.Stat[(104)];
	uint DlgStr=200;
	
	string lexems="$Victim "+playerName;
	
	if(barman.Stat[(71)]==(1))
	{
		lexems+="$BarmanGen @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+10))+"@";
	}
	else
	{
		lexems+="$BarmanGen @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+9))+"@";
	}
	
	Critter@cr=GetPlayer(playerName);
	if(!(@cr!=null))
	{
		player.SayMsg((12),(1),(1000000000+(BankerDialog)*100000+(DlgStr+0)),lexems);
		return;
	}
	
	if(cr.Stat[(71)]==(1))
	{
		lexems+="$Gender @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+8))+"@";
	}
	else
	{
		lexems+="$Gender @msg dlg "+(1000000000+(BankerDialog)*100000+(DlgStr+7))+"@";
	}
	
	if(player.Id==cr.Id)
	{
		player.SayMsg((12),(1),(1000000000+(BankerDialog)*100000+(DlgStr+1)));
		return;
	}
	
	Map@map=cr.GetMap();
	if(!(@map!=null))
	{
		player.SayMsg((12),(1),(1000000000+(BankerDialog)*100000+(DlgStr+2)),lexems);
		return;
	}
	
	if(cr.GetMap().GetLocation().GetProtoId()<50||cr.GetMap().GetLocation().GetProtoId()>=200)
	{
		lexems+="$Place @msg GM "+((cr.GetMap().GetLocation().GetProtoId()+100)*1000)+"@";
		
		if(barman.GetMap().GetLocation().Id==cr.GetMap().GetLocation().Id)
		{
			player.SayMsg((12),(1),(1000000000+(BankerDialog)*100000+(DlgStr+3)),lexems);
			return;
		}
		
		player.SayMsg((12),(1),(1000000000+(BankerDialog)*100000+(DlgStr+4+Random(0,2))),lexems);
	}
	else
	{
		player.SayMsg((12),(1),(1000000000+(BankerDialog)*100000+(DlgStr+2)),lexems);
		return;
	}
}

void r_ToHeal(Critter&player,Critter@npc)
{
	HealCritter(player);
}

void r_DropDrugs(Critter&player,Critter@npc)
{
	DropDrugEffects(player);
}

void r_DropRadiation(Critter&player,Critter@npc)
{
	DropRadiation(player);
}

void r_ShowLocation(Critter&player,Critter@npc,int locNum)
{
	player.SetKnownLoc(false,uint16(locNum));
}

void r_FadeOut(Critter&player,Critter@npc,int time)
{
	if(time==0)
	time=2000;
	FlushScreen(player,false,time);
}

void r_TransitToGlobal(Critter&player,Critter@npc)
{
	player.TransitToGlobal(false);
}

void r_TransitToLocation(Critter&player,Critter@npc,int locPid,int mapIndex)
{
	TransitToLoc(player,locPid,mapIndex,0);
}

void r_TransitToMap(Critter&player,Critter@npc,int mapPid,int entranceNum)
{
	TransitToMap(player,mapPid,entranceNum);
}

void r_InfoMessage(Critter&player,Critter@npc,int strNum)
{
	InfoMessage(player,npc,strNum);
} 

void r_TimeoutSet(Critter&player,Critter@npc,int gameHours)
{
	if((@npc!=null))
	TimeoutSet(npc,gameHours);
} 

void r_SetUniqTO(Critter&player,Critter@npc,int value)
{
	if(!(@npc!=null))
	return;
	GameVar@to=GetUnicumVar((2031),player.Id,npc.Id);
	if(!(@to!=null))
	return;
	to=value*60+__FullSecond;
}

void r_DoorOpen(Critter&player,Critter@npc,int entireNum)
{
	DoorControl(player,entireNum,true);
}

void r_DoorClose(Critter&player,Critter@npc,int entireNum)
{
	DoorControl(player,entireNum,false);
} 

void r_GiveHolodisk(Critter&player,Critter@npc,int holodiskNum)
{
	Item@holo=player.AddItem((58),1);
	holo.HolodiskNumber=holodiskNum;
	holo.Update();
}

void r_Attack(Critter&player,Critter@npc,int npcRole)
{
	Attack(player,npcRole);
}

void r_AttackStop(Critter&player,Critter@npc,int npcRole)
{
	AttackStop(player,npcRole);
}

void r_Kill(Critter&player,Critter@npc,int type)
{
	Kill(player,type);
}

void r_Damage(Critter&player,Critter@npc,int dmg,int type,int dir)
{
	Damage(player,dmg,type,dir);
} 

void r_TeamAttack(Critter&player,Critter@npc)
{
	if(!(@npc!=null))
	return;
	Map@map=npc.GetMap();
	if(!(@map!=null))
	return;
	Critter@[]team;
	if(map.GetCritters(0,(0x01)|(0x20),team)>0)
	{
		for(uint i=0,l=team.length();i<l;i++)
		{
			if(team[i].Stat[(106)]==npc.Stat[(106)])
			AddAttackPlane(team[i],0,player.Id);
		}
	}
} 

void r_SayMessageDelayed(Critter&player,Critter@npc,int strNum,int delaySeconds,int sayType)
{
	if(!(@npc!=null))
	return;
	uint[]values={npc.Id,uint(sayType),uint(strNum)};
	CreateTimeEvent(__FullSecond+delaySeconds,"e_SayMessage",values,false);
}

uint e_SayMessage(uint[]@values)
{
	if(values.length()<3)
	return 0;
	Critter@cr=GetCritter(values[0]);
	if(!(@cr!=null))
	return 0;
	int did=cr.Stat[(104)];
	if(did==0)
	return 0;
	cr.SayMsg(values[1],(1),(1000000000+(did)*100000+(values[2])));
	return 0;
}

void r_SkillUp(Critter&player,Critter@npc,int skill)
{
	SkillUp(player,skill);
}

void r_QuestReward(Critter&player,Critter@npc,int base)
{
	QuestRewardExperience(player,base);
}

void r_QuestReward1(Critter&player,Critter@npc)
{
	int base=10;
	if(player.Stat[(77)]<20)
	base=15;
	if(player.Stat[(77)]<10)
	base=20;
	if(player.Stat[(77)]<5)
	base=40;
	QuestRewardExperience(player,base);
}

void r_QuestReward2(Critter&player,Critter@npc)
{
	int base=15;
	if(player.Stat[(77)]<20)
	base=20;
	if(player.Stat[(77)]<10)
	base=50;
	QuestRewardExperience(player,base);
}

void r_QuestReward3(Critter&player,Critter@npc)
{
	int base=35;
	if(player.Stat[(77)]<20)
	base=45;
	if(player.Stat[(77)]<10)
	base=60;
	QuestRewardExperience(player,base);
}

import bool CheckEventStatus(uint idx,uint status)from"game_event";

bool d_GameEventStatus(Critter&player,Critter@npc,int idx,int status)
{
	return CheckEventStatus(uint(idx),uint(status));
}

bool d_NotLocationKnown(Critter&player,Critter@npc,int locPid)
{
	return!player.IsKnownLoc(false,uint(locPid));
}
void r_CreateLocation(Critter&player,Critter@npc,int locPid,int worldX,int worldY,int dayDelete,int varNum)
{
	
	int delta=__GlobalMapZoneLength*2;
	Location@loc=CreateLocationForCritter(player,locPid,worldX,worldY,delta,varNum);
	if((@loc!=null))
	SetLocationDeleteTime(loc,60*60*24*dayDelete);
}
