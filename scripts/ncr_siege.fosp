                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       

import void DefineInvasionEvent()from"ncr_invasion";    

Location@_GetSiegeCamp(int8 xOff,int8 yOff,uint pidCLoc,uint pidNewLoc)
{
	Location@locCenter=GetLocationByPid(pidCLoc,0);
	if(!(@locCenter!=null))
	return null;
	
	uint xGlobal=locCenter.WorldX+(xOff*__GlobalMapZoneLength+Random(-(__GlobalMapZoneLength/2),(__GlobalMapZoneLength/2)));
	uint yGlobal=locCenter.WorldY+(yOff*__GlobalMapZoneLength+Random(-(__GlobalMapZoneLength/2),(__GlobalMapZoneLength/2)));
	
	uint locId=CreateLocation(pidNewLoc,xGlobal,yGlobal,null);
	if(locId==0)
	{
		Log("Create Location fail. Pid"+pidNewLoc+"; GlobalX="+xGlobal+"; GlobalY="+yGlobal);
		return null;
	}
	DL("Location Created LocId = "+locId+" x = "+xGlobal+" y = "+yGlobal);
	return GetLocation(locId);
	
}

void DeclareSiegeEvent(Map&map)
{
	
	uint eId=CreateTimeEvent(__FullSecond+(30*3*60*60*24),"e_BeginSiege",(1),true);
} 

uint e_BeginSiege(uint[]@values)
{
	
	uint complexity=(1);
	DL("compl ="+complexity);
	
	GameVar@siegeNum=GetGlobalVar((4261)); 
	
	if(!(@siegeNum!=null))
	return 0;
	
	if(siegeNum>0)
	{
		DL("Previous Siege not ended");
		return 60*60*12;
	}
	
	siegeNum=Random((4),(8));
	
	DL("LocNum: "+siegeNum.GetValue());
	
	uint xOff=0;
	uint yOff=0;
	uint locNum=uint(siegeNum.GetValue()); 
	
	for(uint i=0;i<locNum;i++)
	{
		while(xOff==0&&yOff==0)
		{
			yOff=Random(-1,1);
			xOff=Random(-1,1);
		}
		
		Location@loc=_GetSiegeCamp(
		xOff,
		yOff,
		(10),
		Random(((205)),((209)))
		);
		
		if((@loc!=null))
		{
			loc.Visible=true;
			loc.AutoGarbage=false;
			
			loc.Update();
			
			for(uint j=0;j<loc.GetMapCount();j++)
			{
				Map@map=loc.GetMapByIndex(j);
				if((@map!=null))
				{
					map.SetData(0,complexity);
					map.SetScript("ncr_siege@_MapInit");
				}
			}
		}
		else
		{
			siegeNum=siegeNum.GetValue()-1;
		}
		
		yOff=0;
		xOff=0;
		
	}
	complexity++;
	
	CreateTimeEvent(__FullSecond+(30*3*60*60*24),"e_BeginSiege",complexity,true);
	CreateTimeEvent(__FullSecond+(60*60*12),"e_SayElizeRadio",true);
	
	RadioMessageMsg((0),(0),(2940));
	
	DefineInvasionEvent();
	return 0;
}

uint e_SayElizeRadio(uint[]@values)
{
	DL("Elize radio message");
	GameVar@siegeNum=GetGlobalVar((4261));
	if(!(@siegeNum!=null))
	return 0;
	if(siegeNum==0)
	return 0; 
	
	RadioMessageMsg((0),(0),(2940));
	
	return(60*60*12);
}
import void SetMapMobsTemplate(Map&map,uint teamId,int aDist,int alRadius,int alNum,int hLvl,int locAlarm,int globAlarm,int fArmLvl)from"fighter_pattern";

void _MapInit(Map&map,bool firstTime)
{
	
	int complexity=map.GetData(0);
	SetMapMobsTemplate(map,(8),5,3,2,70,1,4,complexity);
	SetMapMobsTemplate(map,(21),15,7,3,50,5,10,complexity);
	map.SetEvent((6),"e_MapCritterIn");
	
	Critter@[]critters;
	map.GetCritters(0,(0x0F)|(0x20),critters);
	for(uint i=0;i<critters.length();i++)
	{
		critters[i].SetScript("ncr_siege@_RaiderInit");
	}
	ActivateMines(map);
	DL("MapInit finished");
} 

import void _ExplodeInit(Item&item,bool firstTime)from"explode"; 

void ActivateMines(Map&map)
{
	Item@[]items;
	if(map.GetItems((545),items)>0)
	{
		for(uint i=0;i<items.length();i++)
		{
			items[i].SetScript("_MineInit");
		}
		
	}
	
}

void _MineInit(Item&item,bool firstTime)
{
	_ExplodeInit(item,firstTime);
	(item.Flags=(item.Flags)|((0x00000001)));
	item.Update();
}

void e_MapCritterIn(Map&map,Critter&cr)
{
	if(cr.IsPlayer())
	{
		cr.SayMsg((11),(0),(2942));
	}
}  

void _RaiderInit(Critter&cr,bool firstTime)
{
	DL("Raider init");
	if(cr.StatBase[(106)]!=(21)&&cr.StatBase[(106)]!=(8))
	return;
	
	cr.StatBase[(89)]=(17);
	cr.SetEvent((2),"e_RaiderDead");
	
}

void e_RaiderDead(Critter&cr,Critter@killer)
{
	DL("Raider dead");
	Map@map=cr.GetMap();
	if(!(@map!=null))
	{
		Log("Error: Siege Map not founded. "+GetLastError());
		return;
	}
	
	if((@killer!=null))
	{
		Map@mapKiller=killer.GetMap();
		if((@mapKiller!=null))
		{
			if(mapKiller.Id==map.Id)
			{
				GameVar@counter=GetLocalVar((4262),killer.Id);
				if((@counter!=null))
				if(counter.GetValue()<9)
				counter=counter.GetValue()+1;
			}
		}
	}
	DL("all ok");
	if(map.GetNpcCount((17),(0x01)|(0x20))==0)
	{
		DL("Все рейдеры мертвы");
		Location@loc=map.GetLocation();
		if((@loc!=null))
		loc.AutoGarbage=true;
		
		GameVar@siegeNum=GetGlobalVar((4261)); 
		
		if(!(@siegeNum!=null))
		return;
		
		DL("Число локаций с рейдерами: "+siegeNum.GetValue());
		if(siegeNum.GetValue()>0)
		{
			siegeNum=siegeNum.GetValue()-1;
		} 
		
		Critter@[]critters;
		map.GetCritters(0,(0x0F)|(0x10),critters);
		DL("players: "+critters.length());
		for(uint i=0;i<critters.length();i++)
		{
			DL("find player");
			if(!critters[i].IsPlayer())
			continue;
			
			GameVar@qVar=GetLocalVar((4263),critters[i].Id);
			if(!(@qVar!=null))
			continue;
			
			if(qVar.GetValue()==(1))
			qVar=uint((2));
		}
	}
}   

void r_GrantPlayer(Critter&player,Critter@cr)
{
	GameVar@counter=GetLocalVar((4262),player.Id);
	if(!(@counter!=null))
	return;
	if(counter.GetValue()>9||counter.GetValue()==0)
	return;
	
	player.AddItem((41),counter.GetValue()*(400));
	
	counter=10;
}  

void BS(Critter&cr,int p0,int p1,int p2)
{
	uint[]v(1);
	v[0]=p0;
	e_BeginSiege(v);
}
void NewLoc(Critter&cr,int p0,int p1,int p2)
{
	
	Location@loc=_GetSiegeCamp(0,-1,(10),(101));
	if((@loc!=null))
	{
		loc.Visible=true;
		loc.Radius=12;
		loc.AutoGarbage=false;
		loc.Color=((uint((0xFF<<24)|(((0x66)&0xFF)<<16)|(((0)&0xFF)<<8)|((0)&0xFF))));
		loc.Update();
	}
}

void DL(string msg)
{
	
}
