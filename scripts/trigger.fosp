

import int RollVsSkill(Critter&cr,uint skillIndex,int bonus)from"stdlib";  

import bool IsSuccessRvS(int val)from"stdlib";  

import bool IsCriticalRvS(int val)from"stdlib";  

import void HealCritter(Critter&player)from"stdlib";  

import bool TransitToLoc(Critter&cr,uint16 locPid,uint mapIndex,uint entranceNum)from"stdlib";  

import bool TransitToMap(Critter&cr,uint16 mapPid,uint entranceNum)from"stdlib";  

import bool TransitToNewLocation(Critter&cr,uint16 locPid)from"stdlib";  

import void InfoMessage(Critter&player,Critter&npc,uint strNum)from"stdlib";  

import void NpcMessageNorm(Critter&npc,uint strNum)from"stdlib";  

import void NpcMessageShout(Critter&npc,uint strNum)from"stdlib";  

import void NpcMessageWhisp(Critter&npc,uint strNum)from"stdlib";  

import void NpcMessageEmo(Critter&npc,uint strNum)from"stdlib";        

import void TimeoutSet(Critter&npc,uint gameHours)from"stdlib";  

import void TimeoutSub(Critter&npc,uint gameHoursSub)from"stdlib";  

import void TimeoutAdd(Critter&npc,uint gameHoursAdd)from"stdlib";  

import void GroupSetVar(Critter&player,uint16 varId,int value)from"stdlib";  

import void Warn(Critter&player,int npcRole)from"stdlib";  

import void DoorControl(Critter&player,uint entireNum,bool toOpen)from"stdlib";  

import bool DialogNpc(Critter&player,int role)from"stdlib";  

import Critter@GetNearCritterWithRole(Map@map,uint16 hexX,int hexY,uint radius,int role)from"stdlib";

import void Kill(Critter&player,int type)from"stdlib";

import void Damage(Critter&player,int dmg,int type,int dir)from"stdlib";

import void AttackStop(Critter&player,int npcRole)from"stdlib";

import void Attack(Critter&player,int npcRole)from"stdlib";
import bool TransitToMap(Critter&cr,int locPid,int mapIndex,int entranceNum)from"stdlib";

import void SkillUp(Critter&player,int skill)from"stdlib";

import void QuestRewardExperience(Critter&cr,uint8 base)from"stdlib"; 

import void DropDrugEffects(Critter&cr)from"drugs";
import void DropRadiation(Critter&cr)from"radiation";
import bool AddAttackPlane(Critter&npc,uint priority,uint critId)from"npc_planes";
import Location@CreateLocationForCritter(Critter&player,int locPid,int worldX,int worldY,int delta,int varNum)from"location";
import void SetLocationDeleteTime(Location&loc,uint time)from"location

import bool AddAttackPlane(Critter&npc,uint priority,Critter&target)from"npc_planes";  

void t_Warn(Critter&player,Scenery&trigger,bool entered,uint8 dir,int npcRole)
{
	Warn(player,npcRole);
}

void t_Attack(Critter&player,Scenery&trigger,bool entered,uint8 dir,int npcRole)
{
	if(not player.IsPlayer())
	return;
	Map@map=player.GetMap();
	uint count=map.GetNpcCount(npcRole,(0x03)|(0x20));
	for(uint i=0;i<count;i++)
	AddAttackPlane(map.GetNpc(npcRole,(0x03)|(0x20),i),((50)+1),player);
}

void t_AttackStop(Critter&player,Scenery&trigger,bool entered,uint8 dir,int npcRole)
{
	if(not player.IsPlayer())
	return;
	Map@map=player.GetMap();
	uint npcCount=map.GetNpcCount(npcRole,(0x03)|(0x20));
	NpcPlane@[]planes;
	for(uint i=0;i<npcCount;i++)
	{
		Critter@npc=map.GetNpc(npcRole,(0x03)|(0x20),i);
		planes.resize(0);
		uint count=npc.GetPlanes(planes);
		
		for(uint j=0;j<count;j++)
		if((planes[j].Attack_TargId==player.Id)and
		(planes[j].Priority==((50)+1)))
		if(npc.ErasePlane(j))
		npc.EraseEnemyFromStack(player.Id);
	}
}

void t_Kill(Critter&player,Scenery&trigger,bool entered,uint8 dir,int type)
{
	Kill(player,type);
}

void t_Damage(Critter&player,Scenery&trigger,bool entered,uint8 dir,int dmg,int type)
{
	Damage(player,dmg,type,dir);
}

void t_DoorOpen(Critter&player,Scenery&trigger,bool entered,uint8 dir,int entireNum)
{
	DoorControl(player,entireNum,true);
}

void door_open(Critter&player,Scenery&trigger,bool entered,uint8 dir,int entireNum)
{
	t_DoorOpen(player,trigger,entered,dir,entireNum);
}
void t_DoorClose(Critter&player,Scenery&trigger,bool entered,uint8 dir,int entireNum)
{
	DoorControl(player,entireNum,false);
}

void door_close(Critter&player,Scenery&trigger,bool entered,uint8 dir,int entireNum)
{
	t_DoorClose(player,trigger,entered,dir,entireNum);
}

import void ShowElevator(Critter&player,uint8 elevatorType,uint[]mapPids,uint entireNum)from"elevator";   

void t_Elevator4(Critter&player,Scenery&trigger,bool entered,uint8 dir,int entireExit,int map1Pid,int map2Pid,int map3Pid,int map4Pid)
{
	uint[]pids={uint(map1Pid),uint(map2Pid),uint(map3Pid),uint(map4Pid)};
	ShowElevator(player,0,pids,entireExit);
}   

void t_Elevator(Critter&player,Scenery&trigger,bool entered,uint8 dir,int entireExit,int elevatorType,int map1Pid,int map2Pid,int map3Pid)
{
	if(entered)
	{
		if(player.Timeout[(239)]>0)
		player.SayMsg((11),(3),(790));
		else if(player.Timeout[(238)]>0)
		player.SayMsg((11),(3),(791));
		else
		{
			uint[]pids={uint(map1Pid)};
			if(map2Pid>0)
			pids.insertLast(uint(map2Pid));
			if(map3Pid>0)
			pids.insertLast(uint(map3Pid));
			ShowElevator(player,elevatorType,pids,entireExit);
		}
	}
} 

void t_DialogNpc(Critter&player,Scenery&trigger,bool entered,uint8 dir,int npcRole)
{
	player.Wait(0);
	DialogNpc(player,npcRole);
}
