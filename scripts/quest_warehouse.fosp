

uint[]MainQuestExperience={0,0,5000,10000,0};
uint[]SubQuest1Experience={0,0,1000,3000,5000};
uint[]SubQuest2Experience={0,0,1000,3000,5000};                       

bool GetQuestCritters(Critter&player,uint[]&questCrIds)
{
	GameVar@questDataId=GetLocalVar((3044),player.Id);
	if(not(@questDataId!=null)||questDataId==0)
	return false;
	
	uint[]questData;
	if(not GetAnyData("Warehouse_"+questDataId.GetValue(),questData)||questData.length()<3)
	return false;
	
	questCrIds.resize(questData.length()-2);
	for(uint i=2,j=questData.length();i<j;i++)
	questCrIds[i-2]=questData[i];
	return true;
}

uint GetLocId(Critter&player)
{
	GameVar@questDataId=GetLocalVar((3044),player.Id);
	if(not(@questDataId!=null)||questDataId==0)
	return 0;
	uint[]questData;
	if(not GetAnyData("Warehouse_"+questDataId.GetValue(),questData))
	return 0;
	return questData[0];
}

void SetLocId(Critter&player,uint locId)
{
	GameVar@questDataId=GetLocalVar((3044),player.Id);
	if(not(@questDataId!=null)||questDataId==0)
	return;
	uint[]questData;
	if(not GetAnyData("Warehouse_"+questDataId.GetValue(),questData))
	return;
	questData[0]=locId;
	SetAnyData("Warehouse_"+questDataId.GetValue(),questData);
}

void ChangeCrittersQuest(uint[]&questCrIds,uint16 varId,int newVal,uint exp)
{
	for(uint i=0,j=questCrIds.length();i<j;i++)
	{
		uint crId=questCrIds[i];
		GameVar@quest=GetLocalVar(varId,crId);
		if((@quest!=null))
		{
			quest=newVal;
			if(exp>0)
			{
				Critter@cr=GetCritter(crId);
				if((@cr!=null))
				cr.StatBase[(76)]+=exp;
			}
		}
	}
}

bool CheckQuestValue(Critter&player,uint questLVar,int val)
{
	GameVar@quest=GetLocalVar(questLVar,player.Id);
	if(not(@quest!=null))
	return false;
	int curVal=quest.GetValue();
	
	if(questLVar==(3040)||questLVar==(3041)||questLVar==(3042))
	{
		return val==curVal;
	}
	else if(questLVar==(3043))
	{
		if(val<0||val>((2)))
		return false;
		if(((curVal>>val)&1)==1)
		return true;
	}
	
	return false;
}

bool CheckNewQuestValue(Critter&player,uint questLVar,int needVal)
{
	GameVar@quest=GetLocalVar(questLVar,player.Id);
	if(not(@quest!=null))
	return false;
	int curVal=quest.GetValue();
	
	if(questLVar==(3040))
	{
		if(needVal==curVal)
		return false;
		if(needVal<(1)||needVal>(4))
		return false;
		if(needVal==(1)&&curVal!=(0))
		return false;
		if(needVal==(2)&&curVal!=(1))
		return false;
		if(needVal==(3)&&curVal!=(2))
		return false;
		if(needVal==(4)&&curVal!=(1))
		return false;
	}
	else if(questLVar==(3041))
	{
		if(needVal==curVal)
		return false;
		if(needVal<(2)||needVal>(4))
		return false;
		if(needVal==(2)&&curVal!=(1))
		return false;
		if(needVal==(3)&&curVal!=(2))
		return false;
		if(needVal==(4)&&curVal!=(3))
		return false;
	}
	else if(questLVar==(3042))
	{
		if(needVal==curVal)
		return false;
		if(needVal<(2)||needVal>(4))
		return false;
		if(needVal==(2)&&curVal!=(1))
		return false;
		if(needVal==(3)&&curVal!=(2))
		return false;
		if(needVal==(4))
		{
			if(curVal!=(3))
			return false;
			GameVar@subQuest1=GetLocalVar((3041),player.Id);
			if(not(@subQuest1!=null)||subQuest1!=(4))
			return false;
		}
	}
	else if(questLVar==(3043))
	{
		if(needVal<0||needVal>((2)))
		return false;
		if(((curVal>>needVal)&1)==0)
		return false;
	}
	else
	{
		return false;
	}
	return true;
}

uint ProcessMainQuest(Critter&player,int newVal)
{
	if(not CheckNewQuestValue(player,(3040),newVal))
	return(100); 
	
	if(newVal==(1))
	{
		Map@map=player.GetMap();
		if(not(@map!=null))
		return(100);
		
		Critter@[]critters;
		critters.insertLast(@player);
		player.GetFollowGroup((0x01),critters);
		if(critters.length()<(5))
		return(101);
		
		bool isMalePresent=false;
		uint aproxLevel=0;
		Critter@[]questCr;
		uint[]questData(2);
		questData[0]=0;
		questData[1]=0;
		for(uint i=0;i<critters.length();i++)
		{
			Critter@cr=critters[i];
			if(cr.IsPlayer())
			{
				GameVar@crQuest=GetLocalVar((3040),cr.Id);
				if((@crQuest!=null)&&CheckNewQuestValue(cr,(3040),(1)))
				{
					if(cr.Stat[(77)]<(6))
					return(103);
					
					questCr.insertLast(@cr);
					questData.insertLast(cr.Id);
					aproxLevel+=cr.Stat[(77)];
					if(not isMalePresent&&cr.Stat[(71)]==(0))
					isMalePresent=true;
				}
			}
		}
		if(not isMalePresent)
		return(101); 
		
		if(questCr.length()<(5))
		return(101);
		if(questCr.length()>(7))
		return(102); 
		
		aproxLevel/=questCr.length();
		if(aproxLevel<(10))
		return(103); 
		
		if(not SetAnyData("Warehouse_"+player.Id,questData))
		return(100); 
		
		for(uint i=0;i<questCr.length();i++)
		{
			Critter@cr=questCr[i];
			GameVar@crQuestMain=GetLocalVar((3040),cr.Id);
			GameVar@crQuestSub1=GetLocalVar((3041),cr.Id);
			GameVar@crQuestSub2=GetLocalVar((3042),cr.Id);
			GameVar@crQuestOther=GetLocalVar((3043),cr.Id);
			GameVar@crQuestDataId=GetLocalVar((3044),cr.Id);
			if(not(@crQuestMain!=null)||not(@crQuestSub1!=null)||not(@crQuestSub2!=null)||
			not(@crQuestOther!=null)||not(@crQuestDataId!=null))
			return(100);
			crQuestMain=(1);
			crQuestSub1=(1);
			crQuestSub2=(1);
			crQuestOther=0;
			crQuestDataId=player.Id;
		}
	}
	
	else
	{
		uint[]questCrIds;
		if(not GetQuestCritters(player,questCrIds))
		return(100);
		ChangeCrittersQuest(questCrIds,(3040),newVal,MainQuestExperience[newVal]);
		
		if(newVal==(4)||newVal==(3))
		{
			
			uint locId=GetLocId(player);
			Location@loc=GetLocation(locId);
			if((@loc!=null))
			loc.AutoGarbage=true; 
			
			GameVar@crQuestDataId=GetLocalVar((3044),player.Id);
			if((@crQuestDataId!=null)&&crQuestDataId!=0)
			EraseAnyData("Warehouse_"+crQuestDataId.GetValue());
		}
	}
	
	return 0;
}

uint ProcessSubQuest1(Critter&player,int newVal)
{
	if(not CheckNewQuestValue(player,(3041),newVal))
	return(100);
	
	uint[]questCrIds;
	if(not GetQuestCritters(player,questCrIds))
	return(100);
	ChangeCrittersQuest(questCrIds,(3041),newVal,SubQuest1Experience[newVal]);
	
	if(newVal==(4))
	{
		Critter@[]critters;
		for(uint i=0,j=questCrIds.length();i<j;i++)
		{
			Critter@cr=GetCritter(questCrIds[i]);
			if((@cr!=null))
			critters.insertLast(@cr);
		}
		uint16 locPid=Random(((220)),((226)));
		uint locId=CreateLocation(locPid,Random(810,990),Random(510,690),critters);
		if(locId==0)
		return(100);
		SetLocId(player,locId);
		Location@loc=GetLocation(locId);
		if(not(@loc!=null))
		return(100);
		Map@map=loc.GetMapByIndex(0);
		if(not(@map!=null))
		return(100);
		uint16 hexX=0,hexY=0;
		if(not map.GetEntireCoords((100),0,hexX,hexY))
		return(100);
		Item@door=map.GetDoor(hexX,hexY);
		if((@door!=null))
		{
			door.LockerId=(Random(1000000,10000000));
			door.Update();
		}
	}
	
	return 0;
}

uint ProcessSubQuest2(Critter&player,int newVal)
{
	if(not CheckNewQuestValue(player,(3042),newVal))
	return(100);
	
	uint[]questCrIds;
	if(not GetQuestCritters(player,questCrIds))
	return(100);
	ChangeCrittersQuest(questCrIds,(3042),newVal,SubQuest2Experience[newVal]);
	
	if(newVal==(4))
	{
		uint locId=GetLocId(player);
		Location@loc=GetLocation(locId);
		if(not(@loc!=null))
		return(100);
		Map@map=loc.GetMapByIndex(0);
		if(not(@map!=null))
		return(100);
		uint16 hexX=0,hexY=0;
		if(not map.GetEntireCoords((100),0,hexX,hexY))
		return(100);
		Item@door=map.GetDoor(hexX,hexY);
		if(not(@door!=null))
		return(100);
		Item@key=player.AddItem((96),1);
		if((@key!=null))
		{
			key.LockerId=door.LockerId;
			key.Update();
		}
	}
	
	return 0;
}

uint ProcessOther(Critter&player,int offset)
{
	GameVar@other=GetLocalVar((3043),player.Id);
	if(not(@other!=null))
	return(100);
	
	int curVal=other.GetValue();
	curVal|=1<<offset;
	other=curVal;
	
	return 0;
} 

bool d_MainQuest_IsNotGived(Critter&player,Critter@npc,int val){return CheckQuestValue(player,(3040),(0))||CheckQuestValue(player,(3040),(3))||CheckQuestValue(player,(3040),(4));}
bool d_MainQuest_IsGived(Critter&player,Critter@npc,int val){return CheckQuestValue(player,(3040),(1))||CheckQuestValue(player,(3040),(2));}
bool d_MainQuest_IsDone(Critter&player,Critter@npc,int val){return CheckQuestValue(player,(3040),(2));}
bool d_SubQuest1_IsFindDaughter(Critter&player,Critter@npc,int val){return CheckQuestValue(player,(3041),(1));}
bool d_SubQuest1_IsDaughterMadMax(Critter&player,Critter@npc,int val){return CheckQuestValue(player,(3041),(2));}
bool d_IsPlayerAsMadMax(Critter&player,Critter@npc,int val)
{
	Item@armor=player.GetItem(0,(3));
	return player.Stat[(71)]==(0)&&(@armor!=null)&&armor.GetProtoId()==(74);
}
bool d_SubQuest1_IsDeliverInformation(Critter&player,Critter@npc,int val){return CheckQuestValue(player,(3041),(3));}
bool d_SubQuest1_IsNotDeliverInformation(Critter&player,Critter@npc,int val){return not CheckQuestValue(player,(3041),(3));}
bool d_SubQuest1_IsNotDone(Critter&player,Critter@npc,int val)
{
	return CheckQuestValue(player,(3041),(1))||
	CheckQuestValue(player,(3041),(2))||
	CheckQuestValue(player,(3041),(3));
}
bool d_SubQuest2_IsGoldenGlobes(Critter&player,Critter@npc,int val){return CheckQuestValue(player,(3042),(1));}
bool d_SubQuest2_IsPornActres(Critter&player,Critter@npc,int val){return CheckQuestValue(player,(3042),(2));}
bool d_SubQuest2_IsGambler(Critter&player,Critter@npc,int val){return CheckQuestValue(player,(3042),(3));}
bool d_Other_IsPornActresPay(Critter&player,Critter@npc,int val){return CheckQuestValue(player,(3043),(1));}
bool d_Other_IsNotPornActresPay(Critter&player,Critter@npc,int val){return not CheckQuestValue(player,(3043),(1));}
bool d_Other_IsRecPorn(Critter&player,Critter@npc,int val){return CheckQuestValue(player,(3043),(2));}
bool d_Other_IsNotRecPorn(Critter&player,Critter@npc,int val){return not CheckQuestValue(player,(3043),(2));}

uint r_MainQuest_Give(Critter&player,Critter@npc){return ProcessMainQuest(player,(1));}

uint r_MainQuest_MarkDone(Critter&player,Critter@npc,int val){return ProcessMainQuest(player,(3));}
uint r_MainQuest_MarkFail(Critter&player,Critter@npc,int val){return ProcessMainQuest(player,(4));}
uint r_SubQuest1_DaughterMadMax(Critter&player,Critter@npc,int val){return ProcessSubQuest1(player,(2));}
uint r_SubQuest1_DeliverInformation(Critter&player,Critter@npc,int val){return ProcessSubQuest1(player,(3));}
uint r_SubQuest1_Done(Critter&player,Critter@npc,int val){return ProcessSubQuest1(player,(4));}
uint r_SubQuest2_PornActres(Critter&player,Critter@npc,int val){return ProcessSubQuest2(player,(2));}
uint r_SubQuest2_Gambler(Critter&player,Critter@npc,int val){return ProcessSubQuest2(player,(3));}
uint r_SubQuest2_Done(Critter&player,Critter@npc,int val){return ProcessSubQuest2(player,(4));}
uint r_Other_PornActresPay(Critter&player,Critter@npc,int val){return ProcessOther(player,(1));}
uint r_Other_RecPorn(Critter&player,Critter@npc,int val){return ProcessOther(player,(2));} 

void t_DoneHex(Critter&player,Scenery&trigger,bool entered,uint8 dir)
{
	if(entered&&
	CheckQuestValue(player,(3040),(1))&&
	CheckQuestValue(player,(3041),(4))&&
	CheckQuestValue(player,(3042),(4)))
	ProcessMainQuest(player,(2));
}
