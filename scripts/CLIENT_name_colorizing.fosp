                                                                                                                                                                                                                                                                                                                                                                                                                                                    

class Record
{
	string NameStr;
	uint NameColor;
	uint ContourColor;
}
Record[]Records;

void InitNameColorizing()
{
	Records.resize(0);
	
	file f;
	if(f.open("NameColorizing.txt","r")==0)
	{
		
		dictionary colors;
		while(not f.isEndOfFile())
		{
			if(f.readWord()=="@")
			{
				string@colorName=f.readWord();
				int r=f.readNumber();
				int g=f.readNumber();
				int b=f.readNumber(); 
				
				for(uint i=0,j=colorName.length();i<j;i++)
				if(colorName[i]=="&")
				colorName[i]=" "; 
				
				colors.set(colorName,uint((uint((0xFF<<24)|(((r)&0xFF)<<16)|(((g)&0xFF)<<8)|((b)&0xFF)))));
			}
		} 
		
		f.setPos(0);
		while(not f.isEndOfFile())
		{
			if(f.readWord()==">")
			{
				Records.grow(1);
				Record@r=Records.last();
				
				r.NameStr=strlwr(f.readWord());
				r.NameColor=GetColor(colors,f.readWord(),((uint((0xFF<<24)|(((0xAD)&0xFF)<<16)|(((0xAD)&0xFF)<<8)|((0xB9)&0xFF)))));
				r.ContourColor=GetColor(colors,f.readWord(),((uint((0xFF<<24)|(((150)&0xFF)<<16)|(((150)&0xFF)<<8)|((0)&0xFF)))));
			}
		}
	}
}

bool TryColorizeCritter(CritterCl&cr)
{
	if(not cr.IsPlayer()||Records.length()==0)
	return false;
	
	string@crName=strlwr(cr.Name);
	for(uint i=0,j=Records.length();i<j;i++)
	{
		Record@r=Records[i];
		if(CompareName(crName,r.NameStr))
		{
			cr.NameColor=r.NameColor;
			cr.ContourColor=r.ContourColor;
			return true;
		}
	}
	return false;
}

uint GetColor(dictionary&dict,string&colorName,uint defaultColor)
{
	uint color;
	if(not dict.get(colorName,color))
	color=defaultColor;
	return color;
}

bool CompareName(string&crName,string&nameStr)
{
	uint l=0;
	uint r=0;
	uint lLen=crName.length();
	uint rLen=nameStr.length();
	while(r<rLen&&l<lLen)
	{
		string@lC=crName[l];
		string@rC=nameStr[r];
		
		if(rC=="*")
		{
			
			for(r++;r<rLen;r++)
			if(nameStr[r]!="*"&&nameStr[r]!="?")
			break;
			if(r>=rLen)
			return true;
			rC=nameStr[r];
			
			for(l++;l<lLen;l++)
			if(crName[l]==rC)
			break;
			if(l>=lLen)
			return false;
		}
		else if(rC=="?")
		{
			
		}
		else if(lC!=rC)
		{
			
			return false;
		}
		
		l++;
		r++;
	}
	
	if(l<lLen||r<rLen)
	return false;
	return true;
}
