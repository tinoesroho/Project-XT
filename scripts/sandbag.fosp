

int FindInArray(int[]&arr,int value)
{
	uint count=arr.length();
	for(uint i=0;i<count;i++)
	{
		if(arr[i]==value)
		return i;
	}
	return-1;
}

bool FindInArray(int[]&arr,int id,int&index)
{
	for(uint i=0;i<arr.length();i++)
	{
		if(id==arr[i])
		{
			index=i;
			return true;
		}
	}
	index=-1;
	return false;
}  

int FindInArray(uint[]&arr,uint value)
{
	uint count=arr.length();
	for(uint i=0;i<count;i++)
	{
		if(arr[i]==value)
		return i;
	}
	return-1;
}

bool FindInArray(uint[]&arr,uint id,int&index)
{
	for(uint i=0;i<arr.length();i++)
	{
		if(id==arr[i])
		{
			index=i;
			return true;
		}
	}
	index=-1;
	return false;
}  

int FindInArray(uint16[]&arr,uint16 value)
{
	uint count=arr.length();
	for(uint i=0;i<count;i++)
	{
		if(arr[i]==value)
		return i;
	}
	return-1;
}  

int FindInArray(uint8[]&arr,uint8 value)
{
	uint count=arr.length();
	for(uint i=0;i<count;i++)
	{
		if(arr[i]==value)
		return i;
	}
	return-1;
}

bool FindInArray(uint8[]&arr,uint8 id,int&index)
{
	for(uint i=0;i<arr.length();i++)
	{
		if(id==arr[i])
		{
			index=i;
			return true;
		}
	}
	index=-1;
	return false;
}  

bool Present(int what,int[]&where)
{
	if(FindInArray(where,what)==-1)
	return false;
	else
	return true;
}

bool Present(uint what,uint[]&where)
{
	if(FindInArray(where,what)==-1)
	return false;
	else
	return true;
}

bool Present(uint16 what,uint16[]&where)
{
	if(FindInArray(where,what)==-1)
	return false;
	else
	return true;
}

void MergeArrays(uint16[]&arrayTo,uint16[]&arrayFrom)
{
	for(uint i=0,l=arrayFrom.length();i<l;i++)
	{
		arrayTo.insertLast(arrayFrom[i]);
	}
}

void MergeArrays(int[]&arrayTo,int[]&arrayFrom)
{
	for(uint i=0,l=arrayFrom.length();i<l;i++)
	{
		arrayTo.insertLast(arrayFrom[i]);
		arrayTo.insertLast(arrayFrom[i]);
	}
}                

bool AddSandBag(Map&map,Critter&player,uint16 x,uint16 y,Item&sandBag)
{
	
	Item@[]items;
	uint pidCur=sandBag.GetProtoId();
	
	if(pidCur!=((580)))
	return false;
	if(CheckIsNearEntire(sandBag))
	{
		DeleteItem(sandBag);
		player.SayMsg((11),(0),(200));
		return false;
	}
	if(map.GetItems(x,y,items)>0)
	{
		for(uint i=0,l=items.length();i<l;i++)
		{    
			
			Item@item=items[i];
			if(!(@item!=null))
			continue;
			if(item.Id==sandBag.Id)
			continue;
			
			if(item.GetType()==(8)||item.GetType()==(9))
			{
				
				DeleteItem(sandBag);
				player.SayMsg((11),(0),(200));
				return false;
			}  
			
			uint iPid=item.GetProtoId();
			switch(iPid)
			{
				case((580)):
				pidCur=((581));
				DeleteItem(item);
				break;
				case((581)):
				pidCur=((582));
				DeleteItem(item);
				break;
				case((582)):
				pidCur=((583));
				DeleteItem(item);
				break;
				case((583)):
				pidCur=((584));
				DeleteItem(item);
				break;
				case((584)):
				player.SayMsg((11),(0),(201));
				player.SayMsg((11),(0),(200));
				DeleteItem(sandBag);
				return true;
				default:
				break;
			}
			
		}
	}
	if(pidCur!=sandBag.GetProtoId())
	{ 
		
		if((@map.GetCritter(x,y)!=null))
		{
			
			DeleteItem(sandBag);
			player.SayMsg((11),(0),(200));
			return false;
		}
		if(!ChangeSandBagProto(sandBag,pidCur))
		{
			Log("SandBag ChangeProto() failed. ErrText = "+GetLastError());
			return false;
		}
		sandBag.Update();
	}
	MoveItem(sandBag,1,map,x,y);
	return true;
}

bool ChangeSandBagProto(Item&sb,int16 pidNew)
{
	if(!sb.ChangeProto(pidNew))
	return false;
	sb.Flags=sb.Proto.Flags;
	(sb.Flags=(sb.Flags)|((0x00200000)));
	return true;
} 

bool TakeSandBag(Map&map,Critter&player,Item&takeFrom)
{
	uint pid=takeFrom.GetProtoId();
	bool lastSB=false;
	uint newPid=0;
	switch(pid)
	{
		case((580)):
		lastSB=true;
		break;
		case((581)):
		newPid=((580));
		break;
		case((582)):
		newPid=((581));
		break;
		case((583)):
		newPid=((582));
		break;
		case((584)):
		newPid=((583));
		break;
		default:
		
		return false;
	}
	
	int freeWeight=player.Stat[(11)]-player.ItemsWeight();
	ProtoItem@sandBagProto=GetProtoItem(((580)));
	if(!(@sandBagProto!=null))
	{
		Log("Sandbag get proto failed. ErrText = "+GetLastError());
		return false;
	}
	if(freeWeight<int(sandBagProto.Weight))
	{
		player.SayMsg((11),(3),(425));
		return false;
	} 
	
	if(lastSB)
	{
		MoveItem(takeFrom,0,player);
		return true;
	}
	else
	{
		if(!ChangeSandBagProto(takeFrom,newPid))
		{
			Log("SandBag ChangeProto() failed. ErrText = "+GetLastError());
			return false;
		}
		takeFrom.Update();
		player.AddItem(((580)),1);
		return true;
	}
}

bool IsSandBag(uint pid)
{
	return(pid==((580))||pid==((581))||pid==((582))||pid==((583))||pid==((584)));
}

bool _SandBagUseOnMe(Item&item,Critter&cr,Item@usedItem)
{
	if(!(@usedItem!=null))
	return false;
	
	if(!IsSandBag(usedItem.GetProtoId()))
	return false;
	uint16 x=0,y=0;
	Map@map=item.GetMapPosition(x,y);
	if((@map!=null))
	{
		AddSandBag(map,cr,x,y,usedItem);
	}
	return true;
}

bool _SandBagSkill(Item&item,Critter&cr,int skill)
{
	uint pid=item.GetProtoId();
	if(!IsSandBag(pid))
	return false;
	if(cr.IsNpc())
	{
		if(pid==((580)))
		{
			DeleteItem(item);
		}
		else
		{
			pid--;
			ChangeSandBagProto(item,pid);
			item.Update();
		}
		return true;
	}
	switch(skill)
	{
		case(-1):
		if(@cr.GetMap()!=null)
		{
			TakeSandBag(cr.GetMap(),cr,item);
		}
		return true;
		case(213): 
		
		if(cr.IsPlayer()&&cr.Timeout[(232)]>0)
		{
			cr.SayMsg((11),(3),(3401));
			return true;
		}
		cr.TimeoutBase[(232)]=(__FullSecond+((1)*__TimeMultiplier*60));
		if(pid==((580)))
		{
			DeleteItem(item);
			cr.AddItem((587),1);
		}
		else
		{
			pid--;
			cr.AddItem((587),1);
			ChangeSandBagProto(item,pid);
			item.Update();
		}
		cr.SayMsg((11),(0),(202));
		return true;
		case(-3):
		return false;
		case(-4):
		return true;
		default:
		return false;
	}
	return false;
}

void _SandBagDrop(Item&item,Critter&cr)
{
	if(!IsSandBag(item.GetProtoId()))
	return;
	uint16 x=0,y=0;
	Map@map=item.GetMapPosition(x,y);
	if((@map!=null))
	{
		AddSandBag(map,cr,x,y,item);
	}
}

bool CheckIsNearEntire(Item&item)
{
	if(item.MapId<1)
	return false;
	Map@map=GetMap(item.MapId);
	if(!(@map!=null))
	return false;
	uint[]entires;
	uint[]ignoreEntries={154,155,156,157,158,159};
	uint16[]hexX;
	uint16[]hexY;
	uint count=map.GetEntires(-1,entires,hexX,hexY);
	for(uint i=0;i<count;i++)
	{
		if(!Present(entires[i],ignoreEntries)&&::GetDistantion(item.HexX,item.HexY,hexX[i],hexY[i])<(5))
		{
			return true;
		}
	}
	return false;
}

void _SandBagInit(Item&sb,bool firstTime)
{
	if(CheckIsNearEntire(sb))
	{
		DeleteItem(sb);
		return;
	}
	(sb.Flags=(sb.Flags)|((0x00200000)));
	sb.SetEvent((5),"_SandBagDrop");
	sb.SetEvent((4),"_SandBagSkill");
	sb.SetEvent((3),"_SandBagUseOnMe");
} 

void SandContour(Critter&cr,int len,int num,int)
{
	Map@map=cr.GetMap();
	if(!(@map!=null))
	return;
	num=(((num-1)>(4))?(4):(((num-1)<(0))?(0):(num-1)));
	uint16 x=cr.HexX;
	uint16 y=cr.HexY;
	for(int dir=0;dir<6;dir++)
	{
		for(int i=0;i<len;i++)
		{
			map.AddItem(x,y,((580))+num,1);
			map.MoveHexByDir(x,y,dir,1);
		}
	}
}
