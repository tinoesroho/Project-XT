

import void UseDrugOn(Critter&cr,Critter&onCr,Item&drug)from"drugs"; 

int DeadAllyCounter(Critter&cr)
{
	if(!(@cr.GetMap()!=null))
	return 0;
	
	if(cr.IsPlayer())
	return 0;
	
	if(cr.StatBase[(106)]==0)
	return 0;
	
	return cr.GetMap().GetData(cr.StatBase[(106)]);
	
}

void AddDeadAlly(Critter&cr)
{
	if(!(@cr.GetMap()!=null))
	return;
	
	if(cr.IsPlayer())
	return;
	
	if(cr.StatBase[(106)]==0)
	return;
	
	cr.GetMap().SetData(cr.StatBase[(106)],DeadAllyCounter(cr)+1);
}           

void SetMapMobsTemplate(Map&map,uint teamId,int aDist,int alRadius,int alNum,int hLvl,int locAlarm,int globAlarm,int fArmLvl)
{
	FighterPattern@fp=FighterPattern();
	fp.AttackDist=aDist;
	fp.AllyAssistRadius=alRadius;
	fp.AssistAlliesNum=alNum;
	fp.MustHealLvl=hLvl;
	fp.LocalAlarmDeads=locAlarm;
	fp.GlobalAlarmDeads=globAlarm;
	fp.ForceArmourLvl=fArmLvl;
	
	Critter@[]critters;
	map.GetCritters(0,(0x01)|(0x20),critters);
	
	for(uint i=0;i<critters.length();i++)
	{
		if(uint(critters[i].StatBase[(106)])!=teamId)
		continue;
		fp.InitPattern(critters[i]);
	}
	map.SetEvent((8),"e_OnMapCritterDead");
}

class FighterPattern
{
	FighterPattern()
	{} 
	
	int AttackDist;
	int AllyAssistRadius;
	int AssistAlliesNum;
	int MustHealLvl;
	int LocalAlarmDeads;
	int GlobalAlarmDeads;
	int ForceArmourLvl; 
	
	void InitPattern(Critter&cr)
	{
		cr.ShowCritterDist1=this.AttackDist;
		
		cr.StatBase[(95)]=this.AllyAssistRadius;
		cr.StatBase[(96)]=this.AssistAlliesNum;
		cr.StatBase[(97)]=this.MustHealLvl;
		cr.StatBase[(98)]=this.LocalAlarmDeads;
		cr.StatBase[(99)]=this.GlobalAlarmDeads;  
		
		_SetOnDeadEvents(cr);
		_SetOnAttackedEvents(cr);
		_SetSeeEnemyEvents(cr);
		_SetOnItemDroppedEvents(cr);
		_SetOnMessageEvents(cr);
		_SetOnIddleEvents(cr);
		
		ForceCritterArmour(cr);
	}
	
	void ForceCritterArmour(Critter&cr)
	{
		
		if(this.ForceArmourLvl>3&&Random(1,3)==1)
		{
			cr.PerkBase[(420)]=1;
			cr.StatBase[(0)]=10;
			cr.StatBase[(2)]=Random(9,10);
			DL("Terminator");
		}
		
		for(int i=(23);i<=(29);i++)
		{
			cr.StatBase[i]=Random(1,this.ForceArmourLvl)*20;
			cr.StatBase[i]=(((cr.StatBase[i])>(180))?(180):(((cr.StatBase[i])<(30))?(30):(cr.StatBase[i])));
		}
		
		cr.StatBase[(7)]=(((cr.StatBase[(7)]+this.ForceArmourLvl*30)>(250))?(250):(((cr.StatBase[(7)]+this.ForceArmourLvl*30)<(50))?(50):(cr.StatBase[(7)]+this.ForceArmourLvl*30)));
		cr.StatBase[(72)]=(((cr.StatBase[(72)]+this.ForceArmourLvl*30)>(250))?(250):(((cr.StatBase[(72)]+this.ForceArmourLvl*30)<(50))?(50):(cr.StatBase[(72)]+this.ForceArmourLvl*30)));  
		
	}
	
	void _SetOnAttackedEvents(Critter&cr)
	{
		cr.StatBase[(94)]=Random(1,5);
		cr.SetEvent((16),"e_CritterAttacked");
	}
	
	void _SetSeeEnemyEvents(Critter&cr)
	{
		cr.SetEvent((5),"e_ShowCritter1");
	}
	
	void _SetOnItemDroppedEvents(Critter&cr)
	{}
	
	void _SetOnDeadEvents(Critter&cr)
	{ 
		
	}
	
	void _SetOnMessageEvents(Critter&cr)
	{
		cr.SetEvent((18),"e_CritterMessage");
	}
	
	void _SetOnIddleEvents(Critter&cr)
	{} 
	
}

void e_OnMapCritterDead(Map&map,Critter&cr,Critter@killer)
{
	if(cr.IsPlayer())
	{
		if(map.GetCritters(0,(0x01)|(0x10),null)==0)
		{
			map.SetData(1,0);
			DL("All players dead");
		}
	}
	else
	{
		AddDeadAlly(cr);
		if(!(@killer!=null))
		return;
		if(!killer.IsPlayer())
		return;
		if(DeadAllyCounter(cr)>=cr.StatBase[(99)])
		{
			cr.SendMessage((17),killer.Id,(2));
			DL("Global alarm called"+DeadAllyCounter(cr)+"cr deads = _GlobalAlarmDeads"+cr.StatBase[(99)]);
			return;
		}
		if(DeadAllyCounter(cr)>=cr.StatBase[(98)])
		{
			cr.SendMessage((17),killer.Id,(0));
			DL("Local alarm called"+DeadAllyCounter(cr));
			return;
		}
	}
}

void e_ShowCritter1(Critter&cr,Critter&showCrit)
{
	
	if(!showCrit.IsPlayer())
	return; 
	
	if(cr.GetMap().GetData(1)>0)
	return;
	cr.GetMap().SetData(1,1); 
	
	if(!showCrit.IsLife())
	return;
	if(cr.CheckEnemyInStack(showCrit.Id))
	return;
	
	e_CritterMessage(cr,cr,(17),showCrit.Id);
	uint dist=GetCrittersDistantion(cr,showCrit);
	if(cr.ShowCritterDist1>=dist)
	{
		
		Map@map=cr.GetMap();
		if(!(@map!=null))
		return;
		
		Critter@[]critters;
		
		if(map.GetCrittersHex(cr.HexX,cr.HexY,cr.StatBase[(95)],(0x01)|(0x20),critters)==0)
		return;
		
		for(uint i=0;i<critters.length();i++)
		{
			if(i>=uint(cr.StatBase[(96)]))
			break;
			e_CritterMessage(critters[i],cr,(17),showCrit.Id);
		}
	}
}
bool e_CritterAttacked(Critter&cr,Critter&attacker)
{
	DL("try heal");
	if(cr.Stat[(72)]*100>cr.StatBase[(97)]*cr.Stat[(7)])
	{
		DL("Heal not needed");
		return false;
	}
	_TryHeal(cr);
	return false;
}
void e_CritterMessage(Critter&cr,Critter&fromCr,int message,int value)
{
	switch(message)
	{
		case(17):
		if(_IsAlly(cr,fromCr))
		{
			if(!cr.IsLife())
			return;
			if(!(@GetCritter(value)!=null))
			return;
			if(!cr.CheckEnemyInStack(value))
			{
				cr.AddEnemyInStack(value);
				DL("Added enemy: "+value);
			}
			else
			{
				DL("Enemy already in stack: "+value);
			}
		}
		break;
		default:
		break;
	}
}    

bool _TryHeal(Critter&cr)
{
	if(!cr.IsLife())
	return false;
	if(cr.CountItem((144))==0&&Random(1,6)==1&&cr.StatBase[(94)]>1)
	{
		cr.AddItem((144),1);
		cr.StatBase[(94)]--;
		cr.StatBase[(94)]--;
	}
	if(cr.CountItem((144))>0)
	{
		Item@item=cr.GetItem((144),-1);
		UseDrugOn(cr,cr,item);
		cr.Animate(0,(28),null,true,true);
		DL("SuperStim used");
		return true;
	}
	if(cr.CountItem((40))==0&&Random(1,4)==1&&cr.StatBase[(94)]>0)
	{
		cr.AddItem((40),1);
		cr.StatBase[(94)]--;
	}
	if(cr.CountItem((40))>0)
	{
		Item@item=cr.GetItem((40),-1);
		UseDrugOn(cr,cr,item);
		cr.Animate(0,(28),null,true,true);
		DL("Stim used");
		return true;
	}
	DL("no Stim in bag");
	
	return false;
	
}

bool _IsAlly(Critter&cr1,Critter&cr2)
{
	return cr1.StatBase[(106)]!=0&&cr1.StatBase[(106)]==cr2.StatBase[(106)];
}
void DL(string msg)
{
	
}
