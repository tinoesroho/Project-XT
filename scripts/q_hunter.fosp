

import void SaveBarterLimit(uint crId,int[]sellLimits,int[]buyLimits)from"limited_barter";
import bool AddWalkPlane(Critter&npc,uint priority,uint16 hexX,uint16 hexY,uint8 dir,bool run,uint cut)from"npc_planes";
import void Explode(Map@map,uint16 hexX,uint16 hexY,Critter@cr,uint16 explodePid,uint ownerId,int bonusDamage,int bonusRadius)from"explode";
import bool AddMiscPlane(Critter&npc,uint priority,uint waitSecond,string@funcName)from"npc_planes";
import bool GetFreeHex(Map&map,uint radius,uint16&hx,uint16&hy)from"caravan";
import bool AddAttackPlane(Critter&npc,uint priority,Critter&target)from"npc_planes";     

void dlg_Colorize(Critter&player,Critter@npc,string@lexems)
{
	if(!((@lexems!=null)&&lexems.length()==0))
	return;
	lexems="$colorHugh"+"|"+((uint((0xFF<<24)|(((60)&0xFF)<<16)|(((248)&0xFF)<<8)|((0)&0xFF))))+" $colorLourence"+"|"+((uint((0xFF<<24)|(((150)&0xFF)<<16)|(((150)&0xFF)<<8)|((0)&0xFF))))+" ";
}

void OnCritterKilled(Critter&cr,Critter@killer)
{
	if((@killer!=null)&&cr.IsNpc()&&killer.IsPlayer())
	{
		uint bt=cr.Stat[(112)];
		if(bt==(19))
		{
			GameVar@qVar=GetLocalVar((5200),killer.Id);
			GameVar@counter=GetLocalVar((5201),killer.Id);
			if(qVar==1)
			{
				if(counter<10)
				counter=counter.GetValue()+1;
				else
				qVar=2;
			}
		}
	}
}

void r_Explode(Critter&player,Critter@npc)
{
	if((@npc!=null))
	{
		npc.SendMessage((33),player.Id,(2));
		npc.AddTimeEvent("cte_Explode",((3)*__TimeMultiplier),0);
	}
}

uint cte_Explode(Critter&cr,int identifier,uint&rate)
{
	Map@map=cr.GetMap();
	if((@map!=null))
	{
		Explode(cr.GetMap(),cr.HexX,cr.HexY,null,(206),cr.Stat[(94)],Random(0,50),Random(0,1));
		cr.AddTimeEvent("cte_Comment",((2)*__TimeMultiplier),0);
		
	}
	return 0;
}

uint cte_Comment(Critter&cr,int identifier,uint&rate)
{
	cr.SayMsg((1),(1),(1000000000+(cr.Stat[(104)])*100000+(1)));
	return 0;
}

import void _TraderInit(Critter&trader,bool firstTime)from"trader"; 

void _HoughInit(Critter&cr,bool firstTime)
{
	_TraderInit(cr,firstTime);
	cr.SetEvent((38),"_HoughBarter");
	cr.StatBase[(119)]=1;
	cr.ModeBase[(535)]=1;
	cr.ModeBase[(512)]=0;
	cr.ModeBase[(523)]=1;
	cr.ModeBase[(511)]=1;
	cr.ModeBase[(532)]=1;
	cr.SetEvent((18),"_HoughMessage");
	cr.SetEvent((36),"_HoughPlaneEnd");
}

void _HoughMessage(Critter&cr,Critter&fromCr,int message,int value)
{
	if(message==(33))
	{
		AddWalkPlane(cr,17,fromCr.HexX,fromCr.HexY,GetDirection(cr.HexX,cr.HexY,fromCr.HexX,fromCr.HexY),false,1);
	}
}

int _HoughPlaneEnd(Critter&cr,NpcPlane&plane,int reason,Critter@someCr,Item@someItem)
{
	if(plane.Priority==17&&reason==(30))
	{
		;
		AddMiscPlane(cr,0,__FullSecond+((3)*__TimeMultiplier),null);
	}
	return(0);
} 

bool _HoughBarter(Critter&cr,Critter&barterCr,bool attach,uint barterCount)
{
	if(attach)
	{
		uint[]values={cr.Id}; 
		
		Item@flute=cr.GetItem((648),-1);
		Item@fluteBarter=barterCr.GetItem((648),-1);
		if(!(@flute!=null)&&!(@fluteBarter!=null))
		{
			GameVar@to=GetLocalVar((3319),barterCr.Id);
			if((@to!=null)&&to<__FullSecond&&to>0)
			{
				to=__FullSecond+((Random(12,28)-barterCr.Stat[(6)])*__TimeMultiplier*3600);
				@flute=cr.AddItem((648),1);
				if((@flute!=null))
				values.insertLast(flute.Id);
			}
		}
		
		GameVar@toxineAccepted=GetLocalVar((3320),barterCr.Id);
		if((@toxineAccepted!=null)&&toxineAccepted>0)
		{
			GameVar@recipeKnown=GetLocalVar((3322),barterCr.Id);
			GameVar@toToxine=GetLocalVar((3321),barterCr.Id);
			if((@toToxine!=null)&&toToxine<__FullSecond&&toToxine>0&&(@recipeKnown!=null))
			{
				if(recipeKnown>0)
				{
					Item@toxine=cr.GetItem((557),-1);
					Item@toxineBarter=barterCr.GetItem((557),-1);
					if(!(@toxine!=null)&&!(@toxineBarter!=null))
					{
						toToxine=__FullSecond+((Random(12,28)-barterCr.Stat[(6)])*__TimeMultiplier*3600);
						@toxine=cr.AddItem((557),5);
						if((@toxine!=null))
						values.insertLast(toxine.Id);
					}
				}
				Item@sToxine=cr.GetItem((647),-1);
				Item@sToxineBarter=barterCr.GetItem((647),-1);
				if(!(@sToxine!=null)&&!(@sToxineBarter!=null))
				{
					toToxine=__FullSecond+(((((Random(10,15)-barterCr.Stat[(6)])*__TimeMultiplier*3600))>(30))?(30):(((((Random(10,15)-barterCr.Stat[(6)])*__TimeMultiplier*3600))<(1))?(1):(((Random(10,15)-barterCr.Stat[(6)])*__TimeMultiplier*3600))));
					@sToxine=cr.AddItem((647),1);
					if((@sToxine!=null))
					values.insertLast(sToxine.Id);
				}
			}
			
		} 
		
		if(values.length()>1)
		CreateTimeEvent(__FullSecond+((10)*__TimeMultiplier*60),"e_DeleteItemsHough",values,false);
	}
	else
	{
		Item@money=cr.GetItem((41),-1);
		if((@money!=null))
		DeleteItem(money);
		
	}
	return true;
}

uint e_DeleteItemsHough(uint[]@values)
{
	Critter@cr=GetCritter(values[0]);
	if((@cr!=null))
	{
		for(uint i=1,l=values.length();i<l;i++)
		{
			Item@item=GetItem(values[i]);
			if((@item!=null)&&item.CritId==cr.Id)
			DeleteItem(item);
		}
	}
	return 0;
} 

void _LourenceInit(Critter&cr,bool firstTime)
{
	cr.StatBase[(119)]=1;
	cr.ModeBase[(535)]=1;
	cr.ModeBase[(512)]=0;
	cr.ModeBase[(523)]=1;
	cr.ModeBase[(511)]=1;
	cr.ModeBase[(532)]=1;
	int[]sellItems={(101),(126),(314),(317),(436),(433),(119),(88)};
	int[]buyItems={(449),(539),(276),(277),(285)};
	SaveBarterLimit(cr.Id,sellItems,buyItems);
}  

void _VertiberdInit(Item&item,bool firstTime)
{
	item.Val0|=(0x0002);
	item.SetEvent((2),"_VertiberdUse");
	item.SetEvent((4),"_VertiberdSkill");
	item.Info=2;
	item.Update();
}

bool _VertiberdUse(Item&item,Critter&cr,Critter@onCritter,Item@onItem,Scenery@onScenery)
{
	cr.SayMsg((11),(3),(10202));
	return true;
}

bool _VertiberdSkill(Item&item,Critter&cr,int skill)
{
	cr.SayMsg((11),(3),(10202));
	return true;
} 

void _FluteInit(Item&item,bool firstTime)
{
	
	if(firstTime)
	{
		item.Val1=10;
		item.Info=2;
		item.SetLexems("$count"+item.Val1);
		item.Update();
	}
	item.SetEvent((2),"_FluteUse");
}    

bool _FluteUse(Item&item,Critter&cr,Critter@onCritter,Item@onItem,Scenery@onScenery)
{
	if((@onCritter!=null)&&onCritter.IsNpc()&&
	onCritter.Stat[(112)]==(24)&&onCritter.IsLife())
	{
		item.Val1--;
		item.SetLexems("$count"+item.Val1);
		item.Update();
		Map@map=onCritter.GetMap();
		if((@map!=null))
		{
			Location@loc=map.GetLocation();
			if((@loc!=null)&&loc.AutoGarbage)
			{
				Item@rat=map.AddItem(onCritter.HexX,onCritter.HexY,(650),1);
				if((@rat!=null))
				rat.SetScript("rat_grenade@_RatGrenadeInit");
				DeleteNpc(onCritter);
				cr.SayMsg((11),(0),(27));
				GameVar@qStatus=GetLocalVar((3317),cr.Id);
				GameVar@counter=GetLocalVar((3318),cr.Id);
				if((@qStatus!=null)&&(@counter!=null)&&qStatus==1&&counter<5)
				{
					counter=counter.GetValue()+1;
					if(counter==5)
					qStatus=2;
				}
			}
			else
			{
				cr.SayMsg((11),(0),(29));
			}
		}
		if(item.Val1<=0)
		{
			DeleteItem(item);
			cr.SayMsg((11),(0),(28));
		}
		return true;
	}
	return false;
} 

void r_SetTO(Critter&player,Critter@npc,int timeoutNum,int realHours)
{
	GameVar@to=GetLocalVar(timeoutNum,player.Id);
	if((@to!=null))
	to=__FullSecond+((realHours)*__TimeMultiplier*3600);
	;
} 

void r_AwakeRats(Critter&cr,Critter@npc)
{
	if((@npc!=null)&&npc.IsNoPlanes())
	{
		Map@map=npc.GetMap();
		if((@map!=null))
		{
			for(uint i=0;i<5;i++)
			{
				uint16 x=npc.HexX;
				uint16 y=npc.HexY;
				if(GetFreeHex(map,2,x,y))
				{
					uint8 dir=GetDirection(x,y,npc.HexX,npc.HexY);
					Critter@rat=map.AddNpc((11),x,y,dir,null,null,"rat_grenade@_RatInit");
					if((@rat!=null))
					{
						AddAttackPlane(rat,0,npc);
					}
				}
			}
			npc.AddTimeEvent("cte_Comment1",((3)*__TimeMultiplier),0);
		}
	}
}

uint cte_Comment1(Critter&cr,int identifier,uint&rate)
{
	cr.SayMsg((1),(1),(1000000000+(cr.Stat[(104)])*100000+(2)));
	return 0;
}        

void _LureInit(Item&item,bool firstTime)
{
	item.SetEvent((2),"_LureUse");
}

bool _LureUse(Item&item,Critter&cr,Critter@onCritter,Item@onItem,Scenery@onScenery)
{
	if((@onCritter!=null)||(@onItem!=null)||(@onScenery!=null))
	return false;
	Map@map=cr.GetMap();
	if((@map!=null)&&map.GetProtoId()==(415)&&map.GetSceneries(cr.HexX,cr.HexY,1,4777,null)>0)
	{
		cr.SayMsg((11),(0),(34));
		DeleteItem(item);
		CreateTimeEvent(__FullSecond+((10)*__TimeMultiplier),"e_MoveRat",map.GetLocation().Id,true);
		GameVar@lurePeriod=GetLocalVar((3325),cr.Id);
		if((@lurePeriod!=null))
		{
			lurePeriod=__FullSecond+((3)*__TimeMultiplier*3600);
			cr.AddTimeEvent("cte_Lure",((30)*__TimeMultiplier),0);
		}
	}
	cr.SayMsg((11),(0),(33));
	return true;
}

uint cte_Lure(Critter&cr,int identifier,uint&rate)
{
	GameVar@lurePeriod=GetLocalVar((3325),cr.Id);
	if((@lurePeriod!=null)&&lurePeriod>__FullSecond)
	{
		Map@map=cr.GetMap();
		if((@map!=null))
		{
			Critter@[]npc;
			if(map.GetCrittersHex(cr.HexX,cr.HexY,5,(0x01)|(0x20),npc)>0)
			{
				Critter@crit=npc[Random(0,npc.length()-1)];
				if((@crit!=null))
				crit.SayMsg((1),(0),(35),"$name"+GetPlayerName(cr.Id));
			}
		}
		return((2)*__TimeMultiplier*60);
	}
	return 0;
}

uint e_MoveRat(uint[]@values)
{
	Location@loc=GetLocation(values[0]);
	if((@loc!=null))
	{
		Map@map=loc.GetMapByIndex(1);
		Map@mapTo=loc.GetMapByIndex(0);
		if((@map!=null)&&(@mapTo!=null))
		{
			Critter@[]rats;
			Critter@[]allies;
			map.GetCritters(0,(0x0F),allies);
			if(map.GetCritters(0,(0x0F)|(0x20),rats)>0)
			{
				for(uint i=0,l=rats.length();i<l&&i<5;i++)
				{
					Critter@cr=rats[i];
					if((@cr!=null))
					{
						uint16 x=0;
						uint16 y=0;
						mapTo.GetEntireCoords((17),0,x,y);
						if(GetFreeHex(mapTo,3,x,y))
						{
							cr.TransitToMap(mapTo.Id,x,y,Random(0,5));
							cr.ModeBase[(517)]=1;
							cr.AddTimeEvent("cte_move",((30)*__TimeMultiplier),0);
							for(uint j=0,k=allies.length();j<k;j++)
							{
								Critter@crit=allies[j];
								if((@crit!=null))
								{
									if(crit.IsPlayer()||crit.Stat[(89)]==401)
									{
										AddAttackPlane(cr,0,crit);
										cr.AddEnemyInStack(crit.Id);
									}
								}
							}
						}
					}
				}
				return((Random(1,3))*__TimeMultiplier);
			}
		}
	}
	return 0;
}

uint cte_move(Critter&cr,int identifier,uint&rate)
{
	if(cr.IsDead())
	return 0;
	if(cr.IsNoPlanes())
	{
		Map@map=cr.GetMap();
		uint16 x=cr.HexX;
		uint16 y=cr.HexY;
		if((@map!=null)&&map.GetEntireCoords((18),0,x,y))
		{
			if(GetFreeHex(map,15,x,y))
			{
				AddWalkPlane(cr,17,x,y,Random(0,5),false,0);
			}
		}
	}
	return((30)*__TimeMultiplier);
}
